/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     {
 *         card: "card"
 *     }
 */
export interface AuthorizationCreateRequest {
    /** The total amount to attempt to authorize. This amount is in the provided currency, or defaults to the card's currency, and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). */
    amount?: number;
    /** Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). */
    amount_details?: AuthorizationCreateRequest.AmountDetails;
    /** How the card details were provided. Defaults to online. */
    authorization_method?: AuthorizationCreateRequest.AuthorizationMethod;
    /** Card associated with this authorization. */
    card: string;
    /** The currency of the authorization. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */
    currency?: string;
    /** Specifies which fields in the response should be expanded. */
    expand?: string[];
    /** Fleet-specific information for authorizations using Fleet cards. */
    fleet?: AuthorizationCreateRequest.Fleet;
    /** Information about fuel that was purchased with this transaction. */
    fuel?: AuthorizationCreateRequest.Fuel;
    /** If set `true`, you may provide [amount](https://stripe.com/docs/api/issuing/authorizations/approve#approve_issuing_authorization-amount) to control how much to hold for the authorization. */
    is_amount_controllable?: boolean;
    /** The total amount to attempt to authorize. This amount is in the provided merchant currency, and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). */
    merchant_amount?: number;
    /** The currency of the authorization. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */
    merchant_currency?: string;
    /** Details about the seller (grocery store, e-commerce website, etc.) where the card authorization happened. */
    merchant_data?: AuthorizationCreateRequest.MerchantData;
    /** Details about the authorization, such as identifiers, set by the card network. */
    network_data?: AuthorizationCreateRequest.NetworkData;
    /** Verifications that Stripe performed on information that the cardholder provided to the merchant. */
    verification_data?: AuthorizationCreateRequest.VerificationData;
    /** The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`. Will populate as `null` when no digital wallet was utilized. */
    wallet?: AuthorizationCreateRequest.Wallet;
}

export namespace AuthorizationCreateRequest {
    /**
     * Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
     */
    export interface AmountDetails {
        /** The ATM withdrawal fee. */
        atm_fee?: number;
        /** The amount of cash requested by the cardholder. */
        cashback_amount?: number;
    }

    /**
     * How the card details were provided. Defaults to online.
     */
    export type AuthorizationMethod = "chip" | "contactless" | "keyed_in" | "online" | "swipe";
    export const AuthorizationMethod = {
        Chip: "chip",
        Contactless: "contactless",
        KeyedIn: "keyed_in",
        Online: "online",
        Swipe: "swipe",
    } as const;

    /**
     * Fleet-specific information for authorizations using Fleet cards.
     */
    export interface Fleet {
        /** Answers to prompts presented to the cardholder at the point of sale. Prompted fields vary depending on the configuration of your physical fleet cards. Typical points of sale support only numeric entry. */
        cardholder_prompt_data?: Fleet.CardholderPromptData;
        /** The type of purchase. One of `fuel_purchase`, `non_fuel_purchase`, or `fuel_and_non_fuel_purchase`. */
        purchase_type?: Fleet.PurchaseType;
        /** More information about the total amount. This information is not guaranteed to be accurate as some merchants may provide unreliable data. */
        reported_breakdown?: Fleet.ReportedBreakdown;
        /** The type of fuel service. One of `non_fuel_transaction`, `full_service`, or `self_service`. */
        service_type?: Fleet.ServiceType;
    }

    export namespace Fleet {
        /**
         * Answers to prompts presented to the cardholder at the point of sale. Prompted fields vary depending on the configuration of your physical fleet cards. Typical points of sale support only numeric entry.
         */
        export interface CardholderPromptData {
            /** Driver ID. */
            driver_id?: string;
            /** Odometer reading. */
            odometer?: number;
            /** An alphanumeric ID. This field is used when a vehicle ID, driver ID, or generic ID is entered by the cardholder, but the merchant or card network did not specify the prompt type. */
            unspecified_id?: string;
            /** User ID. */
            user_id?: string;
            /** Vehicle number. */
            vehicle_number?: string;
        }

        /**
         * The type of purchase. One of `fuel_purchase`, `non_fuel_purchase`, or `fuel_and_non_fuel_purchase`.
         */
        export type PurchaseType = "fuel_and_non_fuel_purchase" | "fuel_purchase" | "non_fuel_purchase";
        export const PurchaseType = {
            FuelAndNonFuelPurchase: "fuel_and_non_fuel_purchase",
            FuelPurchase: "fuel_purchase",
            NonFuelPurchase: "non_fuel_purchase",
        } as const;

        /**
         * More information about the total amount. This information is not guaranteed to be accurate as some merchants may provide unreliable data.
         */
        export interface ReportedBreakdown {
            /** Breakdown of fuel portion of the purchase. */
            fuel?: ReportedBreakdown.Fuel;
            /** Breakdown of non-fuel portion of the purchase. */
            non_fuel?: ReportedBreakdown.NonFuel;
            /** Information about tax included in this transaction. */
            tax?: ReportedBreakdown.Tax;
        }

        export namespace ReportedBreakdown {
            /**
             * Breakdown of fuel portion of the purchase.
             */
            export interface Fuel {
                /** Gross fuel amount that should equal Fuel Volume multipled by Fuel Unit Cost, inclusive of taxes. */
                gross_amount_decimal?: string;
            }

            /**
             * Breakdown of non-fuel portion of the purchase.
             */
            export interface NonFuel {
                /** Gross non-fuel amount that should equal the sum of the line items, inclusive of taxes. */
                gross_amount_decimal?: string;
            }

            /**
             * Information about tax included in this transaction.
             */
            export interface Tax {
                /** Amount of state or provincial Sales Tax included in the transaction amount. Null if not reported by merchant or not subject to tax. */
                local_amount_decimal?: string;
                /** Amount of national Sales Tax or VAT included in the transaction amount. Null if not reported by merchant or not subject to tax. */
                national_amount_decimal?: string;
            }
        }

        /**
         * The type of fuel service. One of `non_fuel_transaction`, `full_service`, or `self_service`.
         */
        export type ServiceType = "full_service" | "non_fuel_transaction" | "self_service";
        export const ServiceType = {
            FullService: "full_service",
            NonFuelTransaction: "non_fuel_transaction",
            SelfService: "self_service",
        } as const;
    }

    /**
     * Information about fuel that was purchased with this transaction.
     */
    export interface Fuel {
        /** [Conexxus Payment System Product Code](https://www.conexxus.org/conexxus-payment-system-product-codes) identifying the primary fuel product purchased. */
        industry_product_code?: string;
        /** The quantity of `unit`s of fuel that was dispensed, represented as a decimal string with at most 12 decimal places. */
        quantity_decimal?: string;
        /** The type of fuel that was purchased. One of `diesel`, `unleaded_plus`, `unleaded_regular`, `unleaded_super`, or `other`. */
        type?: Fuel.Type;
        /** The units for `quantity_decimal`. One of `charging_minute`, `imperial_gallon`, `kilogram`, `kilowatt_hour`, `liter`, `pound`, `us_gallon`, or `other`. */
        unit?: Fuel.Unit;
        /** The cost in cents per each unit of fuel, represented as a decimal string with at most 12 decimal places. */
        unit_cost_decimal?: string;
    }

    export namespace Fuel {
        /**
         * The type of fuel that was purchased. One of `diesel`, `unleaded_plus`, `unleaded_regular`, `unleaded_super`, or `other`.
         */
        export type Type = "diesel" | "other" | "unleaded_plus" | "unleaded_regular" | "unleaded_super";
        export const Type = {
            Diesel: "diesel",
            Other: "other",
            UnleadedPlus: "unleaded_plus",
            UnleadedRegular: "unleaded_regular",
            UnleadedSuper: "unleaded_super",
        } as const;
        /**
         * The units for `quantity_decimal`. One of `charging_minute`, `imperial_gallon`, `kilogram`, `kilowatt_hour`, `liter`, `pound`, `us_gallon`, or `other`.
         */
        export type Unit =
            | "charging_minute"
            | "imperial_gallon"
            | "kilogram"
            | "kilowatt_hour"
            | "liter"
            | "other"
            | "pound"
            | "us_gallon";
        export const Unit = {
            ChargingMinute: "charging_minute",
            ImperialGallon: "imperial_gallon",
            Kilogram: "kilogram",
            KilowattHour: "kilowatt_hour",
            Liter: "liter",
            Other: "other",
            Pound: "pound",
            UsGallon: "us_gallon",
        } as const;
    }

    /**
     * Details about the seller (grocery store, e-commerce website, etc.) where the card authorization happened.
     */
    export interface MerchantData {
        /** A categorization of the seller's type of business. See our [merchant categories guide](https://stripe.com/docs/issuing/merchant-categories) for a list of possible values. */
        category?: MerchantData.Category;
        /** City where the seller is located */
        city?: string;
        /** Country where the seller is located */
        country?: string;
        /** Name of the seller */
        name?: string;
        /** Identifier assigned to the seller by the card network. Different card networks may assign different network_id fields to the same merchant. */
        network_id?: string;
        /** Postal code where the seller is located */
        postal_code?: string;
        /** State where the seller is located */
        state?: string;
        /** An ID assigned by the seller to the location of the sale. */
        terminal_id?: string;
        /** URL provided by the merchant on a 3DS request */
        url?: string;
    }

    export namespace MerchantData {
        /**
         * A categorization of the seller's type of business. See our [merchant categories guide](https://stripe.com/docs/issuing/merchant-categories) for a list of possible values.
         */
        export type Category =
            | "ac_refrigeration_repair"
            | "accounting_bookkeeping_services"
            | "advertising_services"
            | "agricultural_cooperative"
            | "airlines_air_carriers"
            | "airports_flying_fields"
            | "ambulance_services"
            | "amusement_parks_carnivals"
            | "antique_reproductions"
            | "antique_shops"
            | "aquariums"
            | "architectural_surveying_services"
            | "art_dealers_and_galleries"
            | "artists_supply_and_craft_shops"
            | "auto_and_home_supply_stores"
            | "auto_body_repair_shops"
            | "auto_paint_shops"
            | "auto_service_shops"
            | "automated_cash_disburse"
            | "automated_fuel_dispensers"
            | "automobile_associations"
            | "automotive_parts_and_accessories_stores"
            | "automotive_tire_stores"
            | "bail_and_bond_payments"
            | "bakeries"
            | "bands_orchestras"
            | "barber_and_beauty_shops"
            | "betting_casino_gambling"
            | "bicycle_shops"
            | "billiard_pool_establishments"
            | "boat_dealers"
            | "boat_rentals_and_leases"
            | "book_stores"
            | "books_periodicals_and_newspapers"
            | "bowling_alleys"
            | "bus_lines"
            | "business_secretarial_schools"
            | "buying_shopping_services"
            | "cable_satellite_and_other_pay_television_and_radio"
            | "camera_and_photographic_supply_stores"
            | "candy_nut_and_confectionery_stores"
            | "car_and_truck_dealers_new_used"
            | "car_and_truck_dealers_used_only"
            | "car_rental_agencies"
            | "car_washes"
            | "carpentry_services"
            | "carpet_upholstery_cleaning"
            | "caterers"
            | "charitable_and_social_service_organizations_fundraising"
            | "chemicals_and_allied_products"
            | "child_care_services"
            | "childrens_and_infants_wear_stores"
            | "chiropodists_podiatrists"
            | "chiropractors"
            | "cigar_stores_and_stands"
            | "civic_social_fraternal_associations"
            | "cleaning_and_maintenance"
            | "clothing_rental"
            | "colleges_universities"
            | "commercial_equipment"
            | "commercial_footwear"
            | "commercial_photography_art_and_graphics"
            | "commuter_transport_and_ferries"
            | "computer_network_services"
            | "computer_programming"
            | "computer_repair"
            | "computer_software_stores"
            | "computers_peripherals_and_software"
            | "concrete_work_services"
            | "construction_materials"
            | "consulting_public_relations"
            | "correspondence_schools"
            | "cosmetic_stores"
            | "counseling_services"
            | "country_clubs"
            | "courier_services"
            | "court_costs"
            | "credit_reporting_agencies"
            | "cruise_lines"
            | "dairy_products_stores"
            | "dance_hall_studios_schools"
            | "dating_escort_services"
            | "dentists_orthodontists"
            | "department_stores"
            | "detective_agencies"
            | "digital_goods_applications"
            | "digital_goods_games"
            | "digital_goods_large_volume"
            | "digital_goods_media"
            | "direct_marketing_catalog_merchant"
            | "direct_marketing_combination_catalog_and_retail_merchant"
            | "direct_marketing_inbound_telemarketing"
            | "direct_marketing_insurance_services"
            | "direct_marketing_other"
            | "direct_marketing_outbound_telemarketing"
            | "direct_marketing_subscription"
            | "direct_marketing_travel"
            | "discount_stores"
            | "doctors"
            | "door_to_door_sales"
            | "drapery_window_covering_and_upholstery_stores"
            | "drinking_places"
            | "drug_stores_and_pharmacies"
            | "drugs_drug_proprietaries_and_druggist_sundries"
            | "dry_cleaners"
            | "durable_goods"
            | "duty_free_stores"
            | "eating_places_restaurants"
            | "educational_services"
            | "electric_razor_stores"
            | "electric_vehicle_charging"
            | "electrical_parts_and_equipment"
            | "electrical_services"
            | "electronics_repair_shops"
            | "electronics_stores"
            | "elementary_secondary_schools"
            | "emergency_services_gcas_visa_use_only"
            | "employment_temp_agencies"
            | "equipment_rental"
            | "exterminating_services"
            | "family_clothing_stores"
            | "fast_food_restaurants"
            | "financial_institutions"
            | "fines_government_administrative_entities"
            | "fireplace_fireplace_screens_and_accessories_stores"
            | "floor_covering_stores"
            | "florists"
            | "florists_supplies_nursery_stock_and_flowers"
            | "freezer_and_locker_meat_provisioners"
            | "fuel_dealers_non_automotive"
            | "funeral_services_crematories"
            | "furniture_home_furnishings_and_equipment_stores_except_appliances"
            | "furniture_repair_refinishing"
            | "furriers_and_fur_shops"
            | "general_services"
            | "gift_card_novelty_and_souvenir_shops"
            | "glass_paint_and_wallpaper_stores"
            | "glassware_crystal_stores"
            | "golf_courses_public"
            | "government_licensed_horse_dog_racing_us_region_only"
            | "government_licensed_online_casions_online_gambling_us_region_only"
            | "government_owned_lotteries_non_us_region"
            | "government_owned_lotteries_us_region_only"
            | "government_services"
            | "grocery_stores_supermarkets"
            | "hardware_equipment_and_supplies"
            | "hardware_stores"
            | "health_and_beauty_spas"
            | "hearing_aids_sales_and_supplies"
            | "heating_plumbing_a_c"
            | "hobby_toy_and_game_shops"
            | "home_supply_warehouse_stores"
            | "hospitals"
            | "hotels_motels_and_resorts"
            | "household_appliance_stores"
            | "industrial_supplies"
            | "information_retrieval_services"
            | "insurance_default"
            | "insurance_underwriting_premiums"
            | "intra_company_purchases"
            | "jewelry_stores_watches_clocks_and_silverware_stores"
            | "landscaping_services"
            | "laundries"
            | "laundry_cleaning_services"
            | "legal_services_attorneys"
            | "luggage_and_leather_goods_stores"
            | "lumber_building_materials_stores"
            | "manual_cash_disburse"
            | "marinas_service_and_supplies"
            | "marketplaces"
            | "masonry_stonework_and_plaster"
            | "massage_parlors"
            | "medical_and_dental_labs"
            | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
            | "medical_services"
            | "membership_organizations"
            | "mens_and_boys_clothing_and_accessories_stores"
            | "mens_womens_clothing_stores"
            | "metal_service_centers"
            | "miscellaneous_apparel_and_accessory_shops"
            | "miscellaneous_auto_dealers"
            | "miscellaneous_business_services"
            | "miscellaneous_food_stores"
            | "miscellaneous_general_merchandise"
            | "miscellaneous_general_services"
            | "miscellaneous_home_furnishing_specialty_stores"
            | "miscellaneous_publishing_and_printing"
            | "miscellaneous_recreation_services"
            | "miscellaneous_repair_shops"
            | "miscellaneous_specialty_retail"
            | "mobile_home_dealers"
            | "motion_picture_theaters"
            | "motor_freight_carriers_and_trucking"
            | "motor_homes_dealers"
            | "motor_vehicle_supplies_and_new_parts"
            | "motorcycle_shops_and_dealers"
            | "motorcycle_shops_dealers"
            | "music_stores_musical_instruments_pianos_and_sheet_music"
            | "news_dealers_and_newsstands"
            | "non_fi_money_orders"
            | "non_fi_stored_value_card_purchase_load"
            | "nondurable_goods"
            | "nurseries_lawn_and_garden_supply_stores"
            | "nursing_personal_care"
            | "office_and_commercial_furniture"
            | "opticians_eyeglasses"
            | "optometrists_ophthalmologist"
            | "orthopedic_goods_prosthetic_devices"
            | "osteopaths"
            | "package_stores_beer_wine_and_liquor"
            | "paints_varnishes_and_supplies"
            | "parking_lots_garages"
            | "passenger_railways"
            | "pawn_shops"
            | "pet_shops_pet_food_and_supplies"
            | "petroleum_and_petroleum_products"
            | "photo_developing"
            | "photographic_photocopy_microfilm_equipment_and_supplies"
            | "photographic_studios"
            | "picture_video_production"
            | "piece_goods_notions_and_other_dry_goods"
            | "plumbing_heating_equipment_and_supplies"
            | "political_organizations"
            | "postal_services_government_only"
            | "precious_stones_and_metals_watches_and_jewelry"
            | "professional_services"
            | "public_warehousing_and_storage"
            | "quick_copy_repro_and_blueprint"
            | "railroads"
            | "real_estate_agents_and_managers_rentals"
            | "record_stores"
            | "recreational_vehicle_rentals"
            | "religious_goods_stores"
            | "religious_organizations"
            | "roofing_siding_sheet_metal"
            | "secretarial_support_services"
            | "security_brokers_dealers"
            | "service_stations"
            | "sewing_needlework_fabric_and_piece_goods_stores"
            | "shoe_repair_hat_cleaning"
            | "shoe_stores"
            | "small_appliance_repair"
            | "snowmobile_dealers"
            | "special_trade_services"
            | "specialty_cleaning"
            | "sporting_goods_stores"
            | "sporting_recreation_camps"
            | "sports_and_riding_apparel_stores"
            | "sports_clubs_fields"
            | "stamp_and_coin_stores"
            | "stationary_office_supplies_printing_and_writing_paper"
            | "stationery_stores_office_and_school_supply_stores"
            | "swimming_pools_sales"
            | "t_ui_travel_germany"
            | "tailors_alterations"
            | "tax_payments_government_agencies"
            | "tax_preparation_services"
            | "taxicabs_limousines"
            | "telecommunication_equipment_and_telephone_sales"
            | "telecommunication_services"
            | "telegraph_services"
            | "tent_and_awning_shops"
            | "testing_laboratories"
            | "theatrical_ticket_agencies"
            | "timeshares"
            | "tire_retreading_and_repair"
            | "tolls_bridge_fees"
            | "tourist_attractions_and_exhibits"
            | "towing_services"
            | "trailer_parks_campgrounds"
            | "transportation_services"
            | "travel_agencies_tour_operators"
            | "truck_stop_iteration"
            | "truck_utility_trailer_rentals"
            | "typesetting_plate_making_and_related_services"
            | "typewriter_stores"
            | "u_s_federal_government_agencies_or_departments"
            | "uniforms_commercial_clothing"
            | "used_merchandise_and_secondhand_stores"
            | "utilities"
            | "variety_stores"
            | "veterinary_services"
            | "video_amusement_game_supplies"
            | "video_game_arcades"
            | "video_tape_rental_stores"
            | "vocational_trade_schools"
            | "watch_jewelry_repair"
            | "welding_repair"
            | "wholesale_clubs"
            | "wig_and_toupee_stores"
            | "wires_money_orders"
            | "womens_accessory_and_specialty_shops"
            | "womens_ready_to_wear_stores"
            | "wrecking_and_salvage_yards";
        export const Category = {
            AcRefrigerationRepair: "ac_refrigeration_repair",
            AccountingBookkeepingServices: "accounting_bookkeeping_services",
            AdvertisingServices: "advertising_services",
            AgriculturalCooperative: "agricultural_cooperative",
            AirlinesAirCarriers: "airlines_air_carriers",
            AirportsFlyingFields: "airports_flying_fields",
            AmbulanceServices: "ambulance_services",
            AmusementParksCarnivals: "amusement_parks_carnivals",
            AntiqueReproductions: "antique_reproductions",
            AntiqueShops: "antique_shops",
            Aquariums: "aquariums",
            ArchitecturalSurveyingServices: "architectural_surveying_services",
            ArtDealersAndGalleries: "art_dealers_and_galleries",
            ArtistsSupplyAndCraftShops: "artists_supply_and_craft_shops",
            AutoAndHomeSupplyStores: "auto_and_home_supply_stores",
            AutoBodyRepairShops: "auto_body_repair_shops",
            AutoPaintShops: "auto_paint_shops",
            AutoServiceShops: "auto_service_shops",
            AutomatedCashDisburse: "automated_cash_disburse",
            AutomatedFuelDispensers: "automated_fuel_dispensers",
            AutomobileAssociations: "automobile_associations",
            AutomotivePartsAndAccessoriesStores: "automotive_parts_and_accessories_stores",
            AutomotiveTireStores: "automotive_tire_stores",
            BailAndBondPayments: "bail_and_bond_payments",
            Bakeries: "bakeries",
            BandsOrchestras: "bands_orchestras",
            BarberAndBeautyShops: "barber_and_beauty_shops",
            BettingCasinoGambling: "betting_casino_gambling",
            BicycleShops: "bicycle_shops",
            BilliardPoolEstablishments: "billiard_pool_establishments",
            BoatDealers: "boat_dealers",
            BoatRentalsAndLeases: "boat_rentals_and_leases",
            BookStores: "book_stores",
            BooksPeriodicalsAndNewspapers: "books_periodicals_and_newspapers",
            BowlingAlleys: "bowling_alleys",
            BusLines: "bus_lines",
            BusinessSecretarialSchools: "business_secretarial_schools",
            BuyingShoppingServices: "buying_shopping_services",
            CableSatelliteAndOtherPayTelevisionAndRadio: "cable_satellite_and_other_pay_television_and_radio",
            CameraAndPhotographicSupplyStores: "camera_and_photographic_supply_stores",
            CandyNutAndConfectioneryStores: "candy_nut_and_confectionery_stores",
            CarAndTruckDealersNewUsed: "car_and_truck_dealers_new_used",
            CarAndTruckDealersUsedOnly: "car_and_truck_dealers_used_only",
            CarRentalAgencies: "car_rental_agencies",
            CarWashes: "car_washes",
            CarpentryServices: "carpentry_services",
            CarpetUpholsteryCleaning: "carpet_upholstery_cleaning",
            Caterers: "caterers",
            CharitableAndSocialServiceOrganizationsFundraising:
                "charitable_and_social_service_organizations_fundraising",
            ChemicalsAndAlliedProducts: "chemicals_and_allied_products",
            ChildCareServices: "child_care_services",
            ChildrensAndInfantsWearStores: "childrens_and_infants_wear_stores",
            ChiropodistsPodiatrists: "chiropodists_podiatrists",
            Chiropractors: "chiropractors",
            CigarStoresAndStands: "cigar_stores_and_stands",
            CivicSocialFraternalAssociations: "civic_social_fraternal_associations",
            CleaningAndMaintenance: "cleaning_and_maintenance",
            ClothingRental: "clothing_rental",
            CollegesUniversities: "colleges_universities",
            CommercialEquipment: "commercial_equipment",
            CommercialFootwear: "commercial_footwear",
            CommercialPhotographyArtAndGraphics: "commercial_photography_art_and_graphics",
            CommuterTransportAndFerries: "commuter_transport_and_ferries",
            ComputerNetworkServices: "computer_network_services",
            ComputerProgramming: "computer_programming",
            ComputerRepair: "computer_repair",
            ComputerSoftwareStores: "computer_software_stores",
            ComputersPeripheralsAndSoftware: "computers_peripherals_and_software",
            ConcreteWorkServices: "concrete_work_services",
            ConstructionMaterials: "construction_materials",
            ConsultingPublicRelations: "consulting_public_relations",
            CorrespondenceSchools: "correspondence_schools",
            CosmeticStores: "cosmetic_stores",
            CounselingServices: "counseling_services",
            CountryClubs: "country_clubs",
            CourierServices: "courier_services",
            CourtCosts: "court_costs",
            CreditReportingAgencies: "credit_reporting_agencies",
            CruiseLines: "cruise_lines",
            DairyProductsStores: "dairy_products_stores",
            DanceHallStudiosSchools: "dance_hall_studios_schools",
            DatingEscortServices: "dating_escort_services",
            DentistsOrthodontists: "dentists_orthodontists",
            DepartmentStores: "department_stores",
            DetectiveAgencies: "detective_agencies",
            DigitalGoodsApplications: "digital_goods_applications",
            DigitalGoodsGames: "digital_goods_games",
            DigitalGoodsLargeVolume: "digital_goods_large_volume",
            DigitalGoodsMedia: "digital_goods_media",
            DirectMarketingCatalogMerchant: "direct_marketing_catalog_merchant",
            DirectMarketingCombinationCatalogAndRetailMerchant:
                "direct_marketing_combination_catalog_and_retail_merchant",
            DirectMarketingInboundTelemarketing: "direct_marketing_inbound_telemarketing",
            DirectMarketingInsuranceServices: "direct_marketing_insurance_services",
            DirectMarketingOther: "direct_marketing_other",
            DirectMarketingOutboundTelemarketing: "direct_marketing_outbound_telemarketing",
            DirectMarketingSubscription: "direct_marketing_subscription",
            DirectMarketingTravel: "direct_marketing_travel",
            DiscountStores: "discount_stores",
            Doctors: "doctors",
            DoorToDoorSales: "door_to_door_sales",
            DraperyWindowCoveringAndUpholsteryStores: "drapery_window_covering_and_upholstery_stores",
            DrinkingPlaces: "drinking_places",
            DrugStoresAndPharmacies: "drug_stores_and_pharmacies",
            DrugsDrugProprietariesAndDruggistSundries: "drugs_drug_proprietaries_and_druggist_sundries",
            DryCleaners: "dry_cleaners",
            DurableGoods: "durable_goods",
            DutyFreeStores: "duty_free_stores",
            EatingPlacesRestaurants: "eating_places_restaurants",
            EducationalServices: "educational_services",
            ElectricRazorStores: "electric_razor_stores",
            ElectricVehicleCharging: "electric_vehicle_charging",
            ElectricalPartsAndEquipment: "electrical_parts_and_equipment",
            ElectricalServices: "electrical_services",
            ElectronicsRepairShops: "electronics_repair_shops",
            ElectronicsStores: "electronics_stores",
            ElementarySecondarySchools: "elementary_secondary_schools",
            EmergencyServicesGcasVisaUseOnly: "emergency_services_gcas_visa_use_only",
            EmploymentTempAgencies: "employment_temp_agencies",
            EquipmentRental: "equipment_rental",
            ExterminatingServices: "exterminating_services",
            FamilyClothingStores: "family_clothing_stores",
            FastFoodRestaurants: "fast_food_restaurants",
            FinancialInstitutions: "financial_institutions",
            FinesGovernmentAdministrativeEntities: "fines_government_administrative_entities",
            FireplaceFireplaceScreensAndAccessoriesStores: "fireplace_fireplace_screens_and_accessories_stores",
            FloorCoveringStores: "floor_covering_stores",
            Florists: "florists",
            FloristsSuppliesNurseryStockAndFlowers: "florists_supplies_nursery_stock_and_flowers",
            FreezerAndLockerMeatProvisioners: "freezer_and_locker_meat_provisioners",
            FuelDealersNonAutomotive: "fuel_dealers_non_automotive",
            FuneralServicesCrematories: "funeral_services_crematories",
            FurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances:
                "furniture_home_furnishings_and_equipment_stores_except_appliances",
            FurnitureRepairRefinishing: "furniture_repair_refinishing",
            FurriersAndFurShops: "furriers_and_fur_shops",
            GeneralServices: "general_services",
            GiftCardNoveltyAndSouvenirShops: "gift_card_novelty_and_souvenir_shops",
            GlassPaintAndWallpaperStores: "glass_paint_and_wallpaper_stores",
            GlasswareCrystalStores: "glassware_crystal_stores",
            GolfCoursesPublic: "golf_courses_public",
            GovernmentLicensedHorseDogRacingUsRegionOnly: "government_licensed_horse_dog_racing_us_region_only",
            GovernmentLicensedOnlineCasionsOnlineGamblingUsRegionOnly:
                "government_licensed_online_casions_online_gambling_us_region_only",
            GovernmentOwnedLotteriesNonUsRegion: "government_owned_lotteries_non_us_region",
            GovernmentOwnedLotteriesUsRegionOnly: "government_owned_lotteries_us_region_only",
            GovernmentServices: "government_services",
            GroceryStoresSupermarkets: "grocery_stores_supermarkets",
            HardwareEquipmentAndSupplies: "hardware_equipment_and_supplies",
            HardwareStores: "hardware_stores",
            HealthAndBeautySpas: "health_and_beauty_spas",
            HearingAidsSalesAndSupplies: "hearing_aids_sales_and_supplies",
            HeatingPlumbingAC: "heating_plumbing_a_c",
            HobbyToyAndGameShops: "hobby_toy_and_game_shops",
            HomeSupplyWarehouseStores: "home_supply_warehouse_stores",
            Hospitals: "hospitals",
            HotelsMotelsAndResorts: "hotels_motels_and_resorts",
            HouseholdApplianceStores: "household_appliance_stores",
            IndustrialSupplies: "industrial_supplies",
            InformationRetrievalServices: "information_retrieval_services",
            InsuranceDefault: "insurance_default",
            InsuranceUnderwritingPremiums: "insurance_underwriting_premiums",
            IntraCompanyPurchases: "intra_company_purchases",
            JewelryStoresWatchesClocksAndSilverwareStores: "jewelry_stores_watches_clocks_and_silverware_stores",
            LandscapingServices: "landscaping_services",
            Laundries: "laundries",
            LaundryCleaningServices: "laundry_cleaning_services",
            LegalServicesAttorneys: "legal_services_attorneys",
            LuggageAndLeatherGoodsStores: "luggage_and_leather_goods_stores",
            LumberBuildingMaterialsStores: "lumber_building_materials_stores",
            ManualCashDisburse: "manual_cash_disburse",
            MarinasServiceAndSupplies: "marinas_service_and_supplies",
            Marketplaces: "marketplaces",
            MasonryStoneworkAndPlaster: "masonry_stonework_and_plaster",
            MassageParlors: "massage_parlors",
            MedicalAndDentalLabs: "medical_and_dental_labs",
            MedicalDentalOphthalmicAndHospitalEquipmentAndSupplies:
                "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
            MedicalServices: "medical_services",
            MembershipOrganizations: "membership_organizations",
            MensAndBoysClothingAndAccessoriesStores: "mens_and_boys_clothing_and_accessories_stores",
            MensWomensClothingStores: "mens_womens_clothing_stores",
            MetalServiceCenters: "metal_service_centers",
            MiscellaneousApparelAndAccessoryShops: "miscellaneous_apparel_and_accessory_shops",
            MiscellaneousAutoDealers: "miscellaneous_auto_dealers",
            MiscellaneousBusinessServices: "miscellaneous_business_services",
            MiscellaneousFoodStores: "miscellaneous_food_stores",
            MiscellaneousGeneralMerchandise: "miscellaneous_general_merchandise",
            MiscellaneousGeneralServices: "miscellaneous_general_services",
            MiscellaneousHomeFurnishingSpecialtyStores: "miscellaneous_home_furnishing_specialty_stores",
            MiscellaneousPublishingAndPrinting: "miscellaneous_publishing_and_printing",
            MiscellaneousRecreationServices: "miscellaneous_recreation_services",
            MiscellaneousRepairShops: "miscellaneous_repair_shops",
            MiscellaneousSpecialtyRetail: "miscellaneous_specialty_retail",
            MobileHomeDealers: "mobile_home_dealers",
            MotionPictureTheaters: "motion_picture_theaters",
            MotorFreightCarriersAndTrucking: "motor_freight_carriers_and_trucking",
            MotorHomesDealers: "motor_homes_dealers",
            MotorVehicleSuppliesAndNewParts: "motor_vehicle_supplies_and_new_parts",
            MotorcycleShopsAndDealers: "motorcycle_shops_and_dealers",
            MotorcycleShopsDealers: "motorcycle_shops_dealers",
            MusicStoresMusicalInstrumentsPianosAndSheetMusic: "music_stores_musical_instruments_pianos_and_sheet_music",
            NewsDealersAndNewsstands: "news_dealers_and_newsstands",
            NonFiMoneyOrders: "non_fi_money_orders",
            NonFiStoredValueCardPurchaseLoad: "non_fi_stored_value_card_purchase_load",
            NondurableGoods: "nondurable_goods",
            NurseriesLawnAndGardenSupplyStores: "nurseries_lawn_and_garden_supply_stores",
            NursingPersonalCare: "nursing_personal_care",
            OfficeAndCommercialFurniture: "office_and_commercial_furniture",
            OpticiansEyeglasses: "opticians_eyeglasses",
            OptometristsOphthalmologist: "optometrists_ophthalmologist",
            OrthopedicGoodsProstheticDevices: "orthopedic_goods_prosthetic_devices",
            Osteopaths: "osteopaths",
            PackageStoresBeerWineAndLiquor: "package_stores_beer_wine_and_liquor",
            PaintsVarnishesAndSupplies: "paints_varnishes_and_supplies",
            ParkingLotsGarages: "parking_lots_garages",
            PassengerRailways: "passenger_railways",
            PawnShops: "pawn_shops",
            PetShopsPetFoodAndSupplies: "pet_shops_pet_food_and_supplies",
            PetroleumAndPetroleumProducts: "petroleum_and_petroleum_products",
            PhotoDeveloping: "photo_developing",
            PhotographicPhotocopyMicrofilmEquipmentAndSupplies:
                "photographic_photocopy_microfilm_equipment_and_supplies",
            PhotographicStudios: "photographic_studios",
            PictureVideoProduction: "picture_video_production",
            PieceGoodsNotionsAndOtherDryGoods: "piece_goods_notions_and_other_dry_goods",
            PlumbingHeatingEquipmentAndSupplies: "plumbing_heating_equipment_and_supplies",
            PoliticalOrganizations: "political_organizations",
            PostalServicesGovernmentOnly: "postal_services_government_only",
            PreciousStonesAndMetalsWatchesAndJewelry: "precious_stones_and_metals_watches_and_jewelry",
            ProfessionalServices: "professional_services",
            PublicWarehousingAndStorage: "public_warehousing_and_storage",
            QuickCopyReproAndBlueprint: "quick_copy_repro_and_blueprint",
            Railroads: "railroads",
            RealEstateAgentsAndManagersRentals: "real_estate_agents_and_managers_rentals",
            RecordStores: "record_stores",
            RecreationalVehicleRentals: "recreational_vehicle_rentals",
            ReligiousGoodsStores: "religious_goods_stores",
            ReligiousOrganizations: "religious_organizations",
            RoofingSidingSheetMetal: "roofing_siding_sheet_metal",
            SecretarialSupportServices: "secretarial_support_services",
            SecurityBrokersDealers: "security_brokers_dealers",
            ServiceStations: "service_stations",
            SewingNeedleworkFabricAndPieceGoodsStores: "sewing_needlework_fabric_and_piece_goods_stores",
            ShoeRepairHatCleaning: "shoe_repair_hat_cleaning",
            ShoeStores: "shoe_stores",
            SmallApplianceRepair: "small_appliance_repair",
            SnowmobileDealers: "snowmobile_dealers",
            SpecialTradeServices: "special_trade_services",
            SpecialtyCleaning: "specialty_cleaning",
            SportingGoodsStores: "sporting_goods_stores",
            SportingRecreationCamps: "sporting_recreation_camps",
            SportsAndRidingApparelStores: "sports_and_riding_apparel_stores",
            SportsClubsFields: "sports_clubs_fields",
            StampAndCoinStores: "stamp_and_coin_stores",
            StationaryOfficeSuppliesPrintingAndWritingPaper: "stationary_office_supplies_printing_and_writing_paper",
            StationeryStoresOfficeAndSchoolSupplyStores: "stationery_stores_office_and_school_supply_stores",
            SwimmingPoolsSales: "swimming_pools_sales",
            TUiTravelGermany: "t_ui_travel_germany",
            TailorsAlterations: "tailors_alterations",
            TaxPaymentsGovernmentAgencies: "tax_payments_government_agencies",
            TaxPreparationServices: "tax_preparation_services",
            TaxicabsLimousines: "taxicabs_limousines",
            TelecommunicationEquipmentAndTelephoneSales: "telecommunication_equipment_and_telephone_sales",
            TelecommunicationServices: "telecommunication_services",
            TelegraphServices: "telegraph_services",
            TentAndAwningShops: "tent_and_awning_shops",
            TestingLaboratories: "testing_laboratories",
            TheatricalTicketAgencies: "theatrical_ticket_agencies",
            Timeshares: "timeshares",
            TireRetreadingAndRepair: "tire_retreading_and_repair",
            TollsBridgeFees: "tolls_bridge_fees",
            TouristAttractionsAndExhibits: "tourist_attractions_and_exhibits",
            TowingServices: "towing_services",
            TrailerParksCampgrounds: "trailer_parks_campgrounds",
            TransportationServices: "transportation_services",
            TravelAgenciesTourOperators: "travel_agencies_tour_operators",
            TruckStopIteration: "truck_stop_iteration",
            TruckUtilityTrailerRentals: "truck_utility_trailer_rentals",
            TypesettingPlateMakingAndRelatedServices: "typesetting_plate_making_and_related_services",
            TypewriterStores: "typewriter_stores",
            USFederalGovernmentAgenciesOrDepartments: "u_s_federal_government_agencies_or_departments",
            UniformsCommercialClothing: "uniforms_commercial_clothing",
            UsedMerchandiseAndSecondhandStores: "used_merchandise_and_secondhand_stores",
            Utilities: "utilities",
            VarietyStores: "variety_stores",
            VeterinaryServices: "veterinary_services",
            VideoAmusementGameSupplies: "video_amusement_game_supplies",
            VideoGameArcades: "video_game_arcades",
            VideoTapeRentalStores: "video_tape_rental_stores",
            VocationalTradeSchools: "vocational_trade_schools",
            WatchJewelryRepair: "watch_jewelry_repair",
            WeldingRepair: "welding_repair",
            WholesaleClubs: "wholesale_clubs",
            WigAndToupeeStores: "wig_and_toupee_stores",
            WiresMoneyOrders: "wires_money_orders",
            WomensAccessoryAndSpecialtyShops: "womens_accessory_and_specialty_shops",
            WomensReadyToWearStores: "womens_ready_to_wear_stores",
            WreckingAndSalvageYards: "wrecking_and_salvage_yards",
        } as const;
    }

    /**
     * Details about the authorization, such as identifiers, set by the card network.
     */
    export interface NetworkData {
        /** Identifier assigned to the acquirer by the card network. */
        acquiring_institution_id?: string;
    }

    /**
     * Verifications that Stripe performed on information that the cardholder provided to the merchant.
     */
    export interface VerificationData {
        /** Whether the cardholder provided an address first line and if it matched the cardholder’s `billing.address.line1`. */
        address_line1_check?: VerificationData.AddressLine1Check;
        /** Whether the cardholder provided a postal code and if it matched the cardholder’s `billing.address.postal_code`. */
        address_postal_code_check?: VerificationData.AddressPostalCodeCheck;
        /** The exemption applied to this authorization. */
        authentication_exemption?: VerificationData.AuthenticationExemption;
        /** Whether the cardholder provided a CVC and if it matched Stripe’s record. */
        cvc_check?: VerificationData.CvcCheck;
        /** Whether the cardholder provided an expiry date and if it matched Stripe’s record. */
        expiry_check?: VerificationData.ExpiryCheck;
        /** 3D Secure details. */
        three_d_secure?: VerificationData.ThreeDSecure;
    }

    export namespace VerificationData {
        /**
         * Whether the cardholder provided an address first line and if it matched the cardholder’s `billing.address.line1`.
         */
        export type AddressLine1Check = "match" | "mismatch" | "not_provided";
        export const AddressLine1Check = {
            Match: "match",
            Mismatch: "mismatch",
            NotProvided: "not_provided",
        } as const;
        /**
         * Whether the cardholder provided a postal code and if it matched the cardholder’s `billing.address.postal_code`.
         */
        export type AddressPostalCodeCheck = "match" | "mismatch" | "not_provided";
        export const AddressPostalCodeCheck = {
            Match: "match",
            Mismatch: "mismatch",
            NotProvided: "not_provided",
        } as const;

        /**
         * The exemption applied to this authorization.
         */
        export interface AuthenticationExemption {
            /** The entity that requested the exemption, either the acquiring merchant or the Issuing user. */
            claimed_by: AuthenticationExemption.ClaimedBy;
            /** The specific exemption claimed for this authorization. */
            type: AuthenticationExemption.Type;
        }

        export namespace AuthenticationExemption {
            /**
             * The entity that requested the exemption, either the acquiring merchant or the Issuing user.
             */
            export type ClaimedBy = "acquirer" | "issuer";
            export const ClaimedBy = {
                Acquirer: "acquirer",
                Issuer: "issuer",
            } as const;
            /**
             * The specific exemption claimed for this authorization.
             */
            export type Type = "low_value_transaction" | "transaction_risk_analysis" | "unknown";
            export const Type = {
                LowValueTransaction: "low_value_transaction",
                TransactionRiskAnalysis: "transaction_risk_analysis",
                Unknown: "unknown",
            } as const;
        }

        /**
         * Whether the cardholder provided a CVC and if it matched Stripe’s record.
         */
        export type CvcCheck = "match" | "mismatch" | "not_provided";
        export const CvcCheck = {
            Match: "match",
            Mismatch: "mismatch",
            NotProvided: "not_provided",
        } as const;
        /**
         * Whether the cardholder provided an expiry date and if it matched Stripe’s record.
         */
        export type ExpiryCheck = "match" | "mismatch" | "not_provided";
        export const ExpiryCheck = {
            Match: "match",
            Mismatch: "mismatch",
            NotProvided: "not_provided",
        } as const;

        /**
         * 3D Secure details.
         */
        export interface ThreeDSecure {
            /** The outcome of the 3D Secure authentication request. */
            result: ThreeDSecure.Result;
        }

        export namespace ThreeDSecure {
            /**
             * The outcome of the 3D Secure authentication request.
             */
            export type Result = "attempt_acknowledged" | "authenticated" | "failed" | "required";
            export const Result = {
                AttemptAcknowledged: "attempt_acknowledged",
                Authenticated: "authenticated",
                Failed: "failed",
                Required: "required",
            } as const;
        }
    }

    /**
     * The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`. Will populate as `null` when no digital wallet was utilized.
     */
    export type Wallet = "apple_pay" | "google_pay" | "samsung_pay";
    export const Wallet = {
        ApplePay: "apple_pay",
        GooglePay: "google_pay",
        SamsungPay: "samsung_pay",
    } as const;
}
