/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     {
 *         payment_method: "payment_method",
 *         replacements: ["card_cvc"],
 *         url: "url"
 *     }
 */
export interface RequestCreateRequest {
    /** Specifies which fields in the response should be expanded. */
    expand?: string[];
    /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */
    metadata?: Record<string, string>;
    /** The PaymentMethod to insert into the forwarded request. Forwarding previously consumed PaymentMethods is allowed. */
    payment_method: string;
    /** The field kinds to be replaced in the forwarded request. */
    replacements: RequestCreateRequest.Replacements.Item[];
    /** The request body and headers to be sent to the destination endpoint. */
    request?: RequestCreateRequest.Request;
    /** The destination URL for the forwarded request. Must be supported by the config. */
    url: string;
}

export namespace RequestCreateRequest {
    export type Replacements = Replacements.Item[];

    export namespace Replacements {
        export type Item = "card_cvc" | "card_expiry" | "card_number" | "cardholder_name" | "request_signature";
        export const Item = {
            CardCvc: "card_cvc",
            CardExpiry: "card_expiry",
            CardNumber: "card_number",
            CardholderName: "cardholder_name",
            RequestSignature: "request_signature",
        } as const;
    }

    /**
     * The request body and headers to be sent to the destination endpoint.
     */
    export interface Request {
        /** The body payload to send to the destination endpoint. */
        body?: string;
        /** The headers to include in the forwarded request. Can be omitted if no additional headers (excluding Stripe-generated ones such as the Content-Type header) should be included. */
        headers?: Request.Headers.Item[];
    }

    export namespace Request {
        export type Headers = Headers.Item[];

        export namespace Headers {
            export interface Item {
                /** The header name. */
                name: string;
                /** The header value. */
                value: string;
            }
        }
    }
}
