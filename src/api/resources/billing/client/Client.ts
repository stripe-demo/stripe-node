/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { Alert } from "../resources/alert/client/Client";
import { CreditBalanceSummary } from "../resources/creditBalanceSummary/client/Client";
import { CreditBalanceTransaction } from "../resources/creditBalanceTransaction/client/Client";
import { CreditGrant } from "../resources/creditGrant/client/Client";
import { MeterEventAdjustment } from "../resources/meterEventAdjustment/client/Client";
import { MeterEvent } from "../resources/meterEvent/client/Client";
import { Meter } from "../resources/meter/client/Client";
import { MeterEventSummary } from "../resources/meterEventSummary/client/Client";

export declare namespace Billing {
    export interface Options {
        environment?: core.Supplier<environments.StripeEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        username: core.Supplier<string>;
        password: core.Supplier<string>;
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}

export class Billing {
    protected _alert: Alert | undefined;
    protected _creditBalanceSummary: CreditBalanceSummary | undefined;
    protected _creditBalanceTransaction: CreditBalanceTransaction | undefined;
    protected _creditGrant: CreditGrant | undefined;
    protected _meterEventAdjustment: MeterEventAdjustment | undefined;
    protected _meterEvent: MeterEvent | undefined;
    protected _meter: Meter | undefined;
    protected _meterEventSummary: MeterEventSummary | undefined;

    constructor(protected readonly _options: Billing.Options) {}

    public get alert(): Alert {
        return (this._alert ??= new Alert(this._options));
    }

    public get creditBalanceSummary(): CreditBalanceSummary {
        return (this._creditBalanceSummary ??= new CreditBalanceSummary(this._options));
    }

    public get creditBalanceTransaction(): CreditBalanceTransaction {
        return (this._creditBalanceTransaction ??= new CreditBalanceTransaction(this._options));
    }

    public get creditGrant(): CreditGrant {
        return (this._creditGrant ??= new CreditGrant(this._options));
    }

    public get meterEventAdjustment(): MeterEventAdjustment {
        return (this._meterEventAdjustment ??= new MeterEventAdjustment(this._options));
    }

    public get meterEvent(): MeterEvent {
        return (this._meterEvent ??= new MeterEvent(this._options));
    }

    public get meter(): Meter {
        return (this._meter ??= new Meter(this._options));
    }

    public get meterEventSummary(): MeterEventSummary {
        return (this._meterEventSummary ??= new MeterEventSummary(this._options));
    }
}
