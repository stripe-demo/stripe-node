/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     {
 *         amount: 1,
 *         currency: "currency",
 *         financial_account: "financial_account"
 *     }
 */
export interface OutboundPaymentCreateRequest {
    /** Amount (in cents) to be transferred. */
    amount: number;
    /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */
    currency: string;
    /** ID of the customer to whom the OutboundPayment is sent. Must match the Customer attached to the `destination_payment_method` passed in. */
    customer?: string;
    /** An arbitrary string attached to the object. Often useful for displaying to users. */
    description?: string;
    /** The PaymentMethod to use as the payment instrument for the OutboundPayment. Exclusive with `destination_payment_method_data`. */
    destination_payment_method?: string;
    /** Hash used to generate the PaymentMethod to be used for this OutboundPayment. Exclusive with `destination_payment_method`. */
    destination_payment_method_data?: OutboundPaymentCreateRequest.DestinationPaymentMethodData;
    /** Payment method-specific configuration for this OutboundPayment. */
    destination_payment_method_options?: OutboundPaymentCreateRequest.DestinationPaymentMethodOptions;
    /** End user details. */
    end_user_details?: OutboundPaymentCreateRequest.EndUserDetails;
    /** Specifies which fields in the response should be expanded. */
    expand?: string[];
    /** The FinancialAccount to pull funds from. */
    financial_account: string;
    /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */
    metadata?: Record<string, string>;
    /** The description that appears on the receiving end for this OutboundPayment (for example, bank statement for external bank transfer). Maximum 10 characters for `ach` payments, 140 characters for `us_domestic_wire` payments, or 500 characters for `stripe` network transfers. The default value is "payment". */
    statement_descriptor?: string;
}

export namespace OutboundPaymentCreateRequest {
    /**
     * Hash used to generate the PaymentMethod to be used for this OutboundPayment. Exclusive with `destination_payment_method`.
     */
    export interface DestinationPaymentMethodData {
        /** Billing information associated with the PaymentMethod that may be used or required by particular types of payment methods. */
        billing_details?: DestinationPaymentMethodData.BillingDetails;
        /** Required if type is set to `financial_account`. The FinancialAccount ID to send funds to. */
        financial_account?: string;
        /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */
        metadata?: Record<string, string>;
        /** The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type. */
        type: DestinationPaymentMethodData.Type;
        /** Required hash if type is set to `us_bank_account`. */
        us_bank_account?: DestinationPaymentMethodData.UsBankAccount;
    }

    export namespace DestinationPaymentMethodData {
        /**
         * Billing information associated with the PaymentMethod that may be used or required by particular types of payment methods.
         */
        export interface BillingDetails {
            /** Billing address. */
            address?: BillingDetails.Address;
            /** Email address. */
            email?: BillingDetails.Email;
            /** Full name. */
            name?: BillingDetails.Name;
            /** Billing phone number (including extension). */
            phone?: BillingDetails.Phone;
        }

        export namespace BillingDetails {
            /**
             * Billing address.
             */
            export type Address =
                | {
                      city?: string | undefined;
                      country?: string | undefined;
                      line1?: string | undefined;
                      line2?: string | undefined;
                      postal_code?: string | undefined;
                      state?: string | undefined;
                  }
                | "";
            /**
             * Email address.
             */
            export type Email = string | "";
            /**
             * Full name.
             */
            export type Name = string | "";
            /**
             * Billing phone number (including extension).
             */
            export type Phone = string | "";
        }

        /**
         * The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.
         */
        export type Type = "financial_account" | "us_bank_account";
        export const Type = {
            FinancialAccount: "financial_account",
            UsBankAccount: "us_bank_account",
        } as const;

        /**
         * Required hash if type is set to `us_bank_account`.
         */
        export interface UsBankAccount {
            /** Account holder type: individual or company. */
            account_holder_type?: UsBankAccount.AccountHolderType;
            /** Account number of the bank account. */
            account_number?: string;
            /** Account type: checkings or savings. Defaults to checking if omitted. */
            account_type?: UsBankAccount.AccountType;
            /** The ID of a Financial Connections Account to use as a payment method. */
            financial_connections_account?: string;
            /** Routing number of the bank account. */
            routing_number?: string;
        }

        export namespace UsBankAccount {
            /**
             * Account holder type: individual or company.
             */
            export type AccountHolderType = "company" | "individual";
            export const AccountHolderType = {
                Company: "company",
                Individual: "individual",
            } as const;
            /**
             * Account type: checkings or savings. Defaults to checking if omitted.
             */
            export type AccountType = "checking" | "savings";
            export const AccountType = {
                Checking: "checking",
                Savings: "savings",
            } as const;
        }
    }

    /**
     * Payment method-specific configuration for this OutboundPayment.
     */
    export interface DestinationPaymentMethodOptions {
        /** Optional fields for `us_bank_account`. */
        us_bank_account?: DestinationPaymentMethodOptions.UsBankAccount;
    }

    export namespace DestinationPaymentMethodOptions {
        /**
         * Optional fields for `us_bank_account`.
         */
        export type UsBankAccount =
            | {
                  network?: ("ach" | "us_domestic_wire") | undefined;
              }
            | "";
    }

    /**
     * End user details.
     */
    export interface EndUserDetails {
        /** IP address of the user initiating the OutboundPayment. Must be supplied if `present` is set to `true`. */
        ip_address?: string;
        /** `True` if the OutboundPayment creation request is being made on behalf of an end user by a platform. Otherwise, `false`. */
        present: boolean;
    }
}
