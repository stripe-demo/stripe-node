/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     {
 *         account_holder: {
 *             type: "account"
 *         },
 *         permissions: ["balances"]
 *     }
 */
export interface SessionCreateRequest {
    /** The account holder to link accounts for. */
    account_holder: SessionCreateRequest.AccountHolder;
    /** Specifies which fields in the response should be expanded. */
    expand?: string[];
    /** Filters to restrict the kinds of accounts to collect. */
    filters?: SessionCreateRequest.Filters;
    /**
     * List of data features that you would like to request access to.
     *
     * Possible values are `balances`, `transactions`, `ownership`, and `payment_method`.
     */
    permissions: SessionCreateRequest.Permissions.Item[];
    /** List of data features that you would like to retrieve upon account creation. */
    prefetch?: SessionCreateRequest.Prefetch.Item[];
    /** For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app. */
    return_url?: string;
}

export namespace SessionCreateRequest {
    /**
     * The account holder to link accounts for.
     */
    export interface AccountHolder {
        /** The ID of the Stripe account whose accounts will be retrieved. Should only be present if `type` is `account`. */
        account?: string;
        /** The ID of the Stripe customer whose accounts will be retrieved. Should only be present if `type` is `customer`. */
        customer?: string;
        /** Type of account holder to collect accounts for. */
        type: AccountHolder.Type;
    }

    export namespace AccountHolder {
        /**
         * Type of account holder to collect accounts for.
         */
        export type Type = "account" | "customer";
        export const Type = {
            Account: "account",
            Customer: "customer",
        } as const;
    }

    /**
     * Filters to restrict the kinds of accounts to collect.
     */
    export interface Filters {
        /** Restricts the Session to subcategories of accounts that can be linked. Valid subcategories are: `checking`, `savings`, `mortgage`, `line_of_credit`, `credit_card`. */
        account_subcategories?: Filters.AccountSubcategories.Item[];
        /** List of countries from which to collect accounts. */
        countries?: string[];
    }

    export namespace Filters {
        export type AccountSubcategories = AccountSubcategories.Item[];

        export namespace AccountSubcategories {
            export type Item = "checking" | "credit_card" | "line_of_credit" | "mortgage" | "savings";
            export const Item = {
                Checking: "checking",
                CreditCard: "credit_card",
                LineOfCredit: "line_of_credit",
                Mortgage: "mortgage",
                Savings: "savings",
            } as const;
        }
    }

    export type Permissions = Permissions.Item[];

    export namespace Permissions {
        export type Item = "balances" | "ownership" | "payment_method" | "transactions";
        export const Item = {
            Balances: "balances",
            Ownership: "ownership",
            PaymentMethod: "payment_method",
            Transactions: "transactions",
        } as const;
    }

    export type Prefetch = Prefetch.Item[];

    export namespace Prefetch {
        export type Item = "balances" | "ownership" | "transactions";
        export const Item = {
            Balances: "balances",
            Ownership: "ownership",
            Transactions: "transactions",
        } as const;
    }
}
