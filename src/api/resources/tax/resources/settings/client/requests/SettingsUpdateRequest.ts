/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     {}
 */
export interface SettingsUpdateRequest {
    /** Default configuration to be used on Stripe Tax calculations. */
    defaults?: SettingsUpdateRequest.Defaults;
    /** Specifies which fields in the response should be expanded. */
    expand?: string[];
    /** The place where your business is located. */
    head_office?: SettingsUpdateRequest.HeadOffice;
}

export namespace SettingsUpdateRequest {
    /**
     * Default configuration to be used on Stripe Tax calculations.
     */
    export interface Defaults {
        /** Specifies the default [tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#tax-behavior) to be used when the item's price has unspecified tax behavior. One of inclusive, exclusive, or inferred_by_currency. Once specified, it cannot be changed back to null. */
        tax_behavior?: Defaults.TaxBehavior;
        /** A [tax code](https://stripe.com/docs/tax/tax-categories) ID. */
        tax_code?: string;
    }

    export namespace Defaults {
        /**
         * Specifies the default [tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#tax-behavior) to be used when the item's price has unspecified tax behavior. One of inclusive, exclusive, or inferred_by_currency. Once specified, it cannot be changed back to null.
         */
        export type TaxBehavior = "exclusive" | "inclusive" | "inferred_by_currency";
        export const TaxBehavior = {
            Exclusive: "exclusive",
            Inclusive: "inclusive",
            InferredByCurrency: "inferred_by_currency",
        } as const;
    }

    /**
     * The place where your business is located.
     */
    export interface HeadOffice {
        /** The location of the business for tax purposes. */
        address: HeadOffice.Address;
    }

    export namespace HeadOffice {
        /**
         * The location of the business for tax purposes.
         */
        export interface Address {
            /** City, district, suburb, town, or village. */
            city?: string;
            /** Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)). */
            country?: string;
            /** Address line 1 (e.g., street, PO Box, or company name). */
            line1?: string;
            /** Address line 2 (e.g., apartment, suite, unit, or building). */
            line2?: string;
            /** ZIP or postal code. */
            postal_code?: string;
            /** State/province as an [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) subdivision code, without country prefix. Example: "NY" or "TX". */
            state?: string;
        }
    }
}
