/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface InvoiceUpcomingRequestSubscriptionItemsItem {
    /** Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. When updating, pass an empty string to remove previously-defined thresholds. */
    billing_thresholds?: InvoiceUpcomingRequestSubscriptionItemsItem.BillingThresholds;
    /** Delete all usage for a given subscription item. You must pass this when deleting a usage records subscription item. `clear_usage` has no effect if the plan has a billing meter attached. */
    clear_usage?: boolean;
    /** A flag that, if set to `true`, will delete the specified item. */
    deleted?: boolean;
    /** The coupons to redeem into discounts for the subscription item. */
    discounts?: InvoiceUpcomingRequestSubscriptionItemsItem.Discounts;
    /** Subscription item to update. */
    id?: string;
    /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */
    metadata?: InvoiceUpcomingRequestSubscriptionItemsItem.Metadata;
    /** Plan ID for this item, as a string. */
    plan?: string;
    /** The ID of the price object. One of `price` or `price_data` is required. When changing a subscription item's price, `quantity` is set to 1 unless a `quantity` parameter is provided. */
    price?: string;
    /** Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline. One of `price` or `price_data` is required. */
    price_data?: InvoiceUpcomingRequestSubscriptionItemsItem.PriceData;
    /** Quantity for this item. */
    quantity?: number;
    /** A list of [Tax Rate](https://stripe.com/docs/api/tax_rates) ids. These Tax Rates will override the [`default_tax_rates`](https://stripe.com/docs/api/subscriptions/create#create_subscription-default_tax_rates) on the Subscription. When updating, pass an empty string to remove previously-defined tax rates. */
    tax_rates?: InvoiceUpcomingRequestSubscriptionItemsItem.TaxRates;
}

export namespace InvoiceUpcomingRequestSubscriptionItemsItem {
    /**
     * Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. When updating, pass an empty string to remove previously-defined thresholds.
     */
    export type BillingThresholds =
        | {
              usage_gte: number;
          }
        | "";
    /**
     * The coupons to redeem into discounts for the subscription item.
     */
    export type Discounts =
        | {
              coupon?: string | undefined;
              discount?: string | undefined;
              promotion_code?: string | undefined;
          }[]
        | "";
    /**
     * Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
     */
    export type Metadata = Record<string, string> | "";

    /**
     * Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline. One of `price` or `price_data` is required.
     */
    export interface PriceData {
        /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */
        currency: string;
        /** The ID of the product that this price will belong to. */
        product: string;
        /** The recurring components of a price such as `interval` and `interval_count`. */
        recurring: PriceData.Recurring;
        /** Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed. */
        tax_behavior?: PriceData.TaxBehavior;
        /** A positive integer in cents (or local equivalent) (or 0 for a free price) representing how much to charge. */
        unit_amount?: number;
        /** Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set. */
        unit_amount_decimal?: string;
    }

    export namespace PriceData {
        /**
         * The recurring components of a price such as `interval` and `interval_count`.
         */
        export interface Recurring {
            /** Specifies billing frequency. Either `day`, `week`, `month` or `year`. */
            interval: Recurring.Interval;
            /** The number of intervals between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of three years interval allowed (3 years, 36 months, or 156 weeks). */
            interval_count?: number;
        }

        export namespace Recurring {
            /**
             * Specifies billing frequency. Either `day`, `week`, `month` or `year`.
             */
            export type Interval = "day" | "month" | "week" | "year";
            export const Interval = {
                Day: "day",
                Month: "month",
                Week: "week",
                Year: "year",
            } as const;
        }

        /**
         * Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
         */
        export type TaxBehavior = "exclusive" | "inclusive" | "unspecified";
        export const TaxBehavior = {
            Exclusive: "exclusive",
            Inclusive: "inclusive",
            Unspecified: "unspecified",
        } as const;
    }

    /**
     * A list of [Tax Rate](https://stripe.com/docs/api/tax_rates) ids. These Tax Rates will override the [`default_tax_rates`](https://stripe.com/docs/api/subscriptions/create#create_subscription-default_tax_rates) on the Subscription. When updating, pass an empty string to remove previously-defined tax rates.
     */
    export type TaxRates = string[] | "";
}
