/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     {
 *         lines: [{}]
 *     }
 */
export interface InvoiceAddLinesRequest {
    /** Specifies which fields in the response should be expanded. */
    expand?: string[];
    /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */
    invoice_metadata?: InvoiceAddLinesRequest.InvoiceMetadata;
    /** The line items to add. */
    lines: InvoiceAddLinesRequest.Lines.Item[];
}

export namespace InvoiceAddLinesRequest {
    /**
     * Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
     */
    export type InvoiceMetadata = Record<string, string> | "";
    export type Lines = Lines.Item[];

    export namespace Lines {
        export interface Item {
            /** The integer amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount. */
            amount?: number;
            /** An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking. */
            description?: string;
            /** Controls whether discounts apply to this line item. Defaults to false for prorations or negative line items, and true for all other line items. Cannot be set to true for prorations. */
            discountable?: boolean;
            /** The coupons, promotion codes & existing discounts which apply to the line item. Item discounts are applied before invoice discounts. Pass an empty string to remove previously-defined discounts. */
            discounts?: Item.Discounts;
            /** ID of an unassigned invoice item to assign to this invoice. If not provided, a new item will be created. */
            invoice_item?: string;
            /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */
            metadata?: Item.Metadata;
            /** The period associated with this invoice item. When set to different values, the period will be rendered on the invoice. If you have [Stripe Revenue Recognition](https://stripe.com/docs/revenue-recognition) enabled, the period will be used to recognize and defer revenue. See the [Revenue Recognition documentation](https://stripe.com/docs/revenue-recognition/methodology/subscriptions-and-invoicing) for details. */
            period?: Item.Period;
            /** The ID of the price object. One of `price` or `price_data` is required. */
            price?: string;
            /** Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline. One of `price` or `price_data` is required. */
            price_data?: Item.PriceData;
            /** Non-negative integer. The quantity of units for the line item. */
            quantity?: number;
            /** A list of up to 10 tax amounts for this line item. This can be useful if you calculate taxes on your own or use a third-party to calculate them. You cannot set tax amounts if any line item has [tax_rates](https://stripe.com/docs/api/invoices/line_item#invoice_line_item_object-tax_rates) or if the invoice has [default_tax_rates](https://stripe.com/docs/api/invoices/object#invoice_object-default_tax_rates) or uses [automatic tax](https://stripe.com/docs/tax/invoicing). Pass an empty string to remove previously defined tax amounts. */
            tax_amounts?: Item.TaxAmounts;
            /** The tax rates which apply to the line item. When set, the `default_tax_rates` on the invoice do not apply to this line item. Pass an empty string to remove previously-defined tax rates. */
            tax_rates?: Item.TaxRates;
        }

        export namespace Item {
            /**
             * The coupons, promotion codes & existing discounts which apply to the line item. Item discounts are applied before invoice discounts. Pass an empty string to remove previously-defined discounts.
             */
            export type Discounts =
                | {
                      coupon?: string | undefined;
                      discount?: string | undefined;
                      promotion_code?: string | undefined;
                  }[]
                | "";
            /**
             * Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
             */
            export type Metadata = Record<string, string> | "";

            /**
             * The period associated with this invoice item. When set to different values, the period will be rendered on the invoice. If you have [Stripe Revenue Recognition](https://stripe.com/docs/revenue-recognition) enabled, the period will be used to recognize and defer revenue. See the [Revenue Recognition documentation](https://stripe.com/docs/revenue-recognition/methodology/subscriptions-and-invoicing) for details.
             */
            export interface Period {
                /** The end of the period, which must be greater than or equal to the start. This value is inclusive. */
                end: number;
                /** The start of the period. This value is inclusive. */
                start: number;
            }

            /**
             * Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline. One of `price` or `price_data` is required.
             */
            export interface PriceData {
                /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */
                currency: string;
                /** The ID of the product that this price will belong to. One of `product` or `product_data` is required. */
                product?: string;
                /** Data used to generate a new product object inline. One of `product` or `product_data` is required. */
                product_data?: PriceData.ProductData;
                /** Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed. */
                tax_behavior?: PriceData.TaxBehavior;
                /** A non-negative integer in cents (or local equivalent) representing how much to charge. One of `unit_amount` or `unit_amount_decimal` is required. */
                unit_amount?: number;
                /** Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set. */
                unit_amount_decimal?: string;
            }

            export namespace PriceData {
                /**
                 * Data used to generate a new product object inline. One of `product` or `product_data` is required.
                 */
                export interface ProductData {
                    /** The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes. */
                    description?: string;
                    /** A list of up to 8 URLs of images for this product, meant to be displayable to the customer. */
                    images?: string[];
                    /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */
                    metadata?: Record<string, string>;
                    /** The product's name, meant to be displayable to the customer. */
                    name: string;
                    /** A [tax code](https://stripe.com/docs/tax/tax-categories) ID. */
                    tax_code?: string;
                }

                /**
                 * Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
                 */
                export type TaxBehavior = "exclusive" | "inclusive" | "unspecified";
                export const TaxBehavior = {
                    Exclusive: "exclusive",
                    Inclusive: "inclusive",
                    Unspecified: "unspecified",
                } as const;
            }

            /**
             * A list of up to 10 tax amounts for this line item. This can be useful if you calculate taxes on your own or use a third-party to calculate them. You cannot set tax amounts if any line item has [tax_rates](https://stripe.com/docs/api/invoices/line_item#invoice_line_item_object-tax_rates) or if the invoice has [default_tax_rates](https://stripe.com/docs/api/invoices/object#invoice_object-default_tax_rates) or uses [automatic tax](https://stripe.com/docs/tax/invoicing). Pass an empty string to remove previously defined tax amounts.
             */
            export type TaxAmounts =
                | {
                      amount: number;
                      tax_rate_data: {
                          country?: string | undefined;
                          description?: string | undefined;
                          display_name: string;
                          inclusive: boolean;
                          jurisdiction?: string | undefined;
                          percentage: number;
                          state?: string | undefined;
                          tax_type?:
                              | (
                                    | "amusement_tax"
                                    | "communications_tax"
                                    | "gst"
                                    | "hst"
                                    | "igst"
                                    | "jct"
                                    | "lease_tax"
                                    | "pst"
                                    | "qst"
                                    | "retail_delivery_fee"
                                    | "rst"
                                    | "sales_tax"
                                    | "service_tax"
                                    | "vat"
                                )
                              | undefined;
                      };
                      taxable_amount: number;
                  }[]
                | "";
            /**
             * The tax rates which apply to the line item. When set, the `default_tax_rates` on the invoice do not apply to this line item. Pass an empty string to remove previously-defined tax rates.
             */
            export type TaxRates = string[] | "";
        }
    }
}
