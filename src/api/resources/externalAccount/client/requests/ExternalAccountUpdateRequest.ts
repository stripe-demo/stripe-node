/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     {}
 */
export interface ExternalAccountUpdateRequest {
    /** The name of the person or business that owns the bank account. */
    account_holder_name?: string;
    /** The type of entity that holds the account. This can be either `individual` or `company`. */
    account_holder_type?: ExternalAccountUpdateRequest.AccountHolderType;
    /** The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`. */
    account_type?: ExternalAccountUpdateRequest.AccountType;
    /** City/District/Suburb/Town/Village. */
    address_city?: string;
    /** Billing address country, if provided when creating card. */
    address_country?: string;
    /** Address line 1 (Street address/PO Box/Company name). */
    address_line1?: string;
    /** Address line 2 (Apartment/Suite/Unit/Building). */
    address_line2?: string;
    /** State/County/Province/Region. */
    address_state?: string;
    /** ZIP or postal code. */
    address_zip?: string;
    /** When set to true, this becomes the default external account for its currency. */
    default_for_currency?: boolean;
    /** Documents that may be submitted to satisfy various informational requests. */
    documents?: ExternalAccountUpdateRequest.Documents;
    /** Two digit number representing the card’s expiration month. */
    exp_month?: string;
    /** Four digit number representing the card’s expiration year. */
    exp_year?: string;
    /** Specifies which fields in the response should be expanded. */
    expand?: string[];
    /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */
    metadata?: ExternalAccountUpdateRequest.Metadata;
    /** Cardholder name. */
    name?: string;
}

export namespace ExternalAccountUpdateRequest {
    /**
     * The type of entity that holds the account. This can be either `individual` or `company`.
     */
    export type AccountHolderType = "" | "company" | "individual";
    export const AccountHolderType = {
        Empty: "",
        Company: "company",
        Individual: "individual",
    } as const;
    /**
     * The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.
     */
    export type AccountType = "checking" | "futsu" | "savings" | "toza";
    export const AccountType = {
        Checking: "checking",
        Futsu: "futsu",
        Savings: "savings",
        Toza: "toza",
    } as const;

    /**
     * Documents that may be submitted to satisfy various informational requests.
     */
    export interface Documents {
        /** One or more documents that support the [Bank account ownership verification](https://support.stripe.com/questions/bank-account-ownership-verification) requirement. Must be a document associated with the bank account that displays the last 4 digits of the account number, either a statement or a check. */
        bank_account_ownership_verification?: Documents.BankAccountOwnershipVerification;
    }

    export namespace Documents {
        /**
         * One or more documents that support the [Bank account ownership verification](https://support.stripe.com/questions/bank-account-ownership-verification) requirement. Must be a document associated with the bank account that displays the last 4 digits of the account number, either a statement or a check.
         */
        export interface BankAccountOwnershipVerification {
            /** One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`. */
            files?: string[];
        }
    }

    /**
     * Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
     */
    export type Metadata = Record<string, string> | "";
}
