/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     {
 *         display_name: "display_name"
 *     }
 */
export interface ShippingRateCreateRequest {
    /** The estimated range for how long shipping will take, meant to be displayable to the customer. This will appear on CheckoutSessions. */
    delivery_estimate?: ShippingRateCreateRequest.DeliveryEstimate;
    /** The name of the shipping rate, meant to be displayable to the customer. This will appear on CheckoutSessions. */
    display_name: string;
    /** Specifies which fields in the response should be expanded. */
    expand?: string[];
    /** Describes a fixed amount to charge for shipping. Must be present if type is `fixed_amount`. */
    fixed_amount?: ShippingRateCreateRequest.FixedAmount;
    /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */
    metadata?: Record<string, string>;
    /** Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. */
    tax_behavior?: ShippingRateCreateRequest.TaxBehavior;
    /** A [tax code](https://stripe.com/docs/tax/tax-categories) ID. The Shipping tax code is `txcd_92010001`. */
    tax_code?: string;
    /** The type of calculation to use on the shipping rate. */
    type?: "fixed_amount";
}

export namespace ShippingRateCreateRequest {
    /**
     * The estimated range for how long shipping will take, meant to be displayable to the customer. This will appear on CheckoutSessions.
     */
    export interface DeliveryEstimate {
        /** The upper bound of the estimated range. If empty, represents no upper bound i.e., infinite. */
        maximum?: DeliveryEstimate.Maximum;
        /** The lower bound of the estimated range. If empty, represents no lower bound. */
        minimum?: DeliveryEstimate.Minimum;
    }

    export namespace DeliveryEstimate {
        /**
         * The upper bound of the estimated range. If empty, represents no upper bound i.e., infinite.
         */
        export interface Maximum {
            /** A unit of time. */
            unit: Maximum.Unit;
            /** Must be greater than 0. */
            value: number;
        }

        export namespace Maximum {
            /**
             * A unit of time.
             */
            export type Unit = "business_day" | "day" | "hour" | "month" | "week";
            export const Unit = {
                BusinessDay: "business_day",
                Day: "day",
                Hour: "hour",
                Month: "month",
                Week: "week",
            } as const;
        }

        /**
         * The lower bound of the estimated range. If empty, represents no lower bound.
         */
        export interface Minimum {
            /** A unit of time. */
            unit: Minimum.Unit;
            /** Must be greater than 0. */
            value: number;
        }

        export namespace Minimum {
            /**
             * A unit of time.
             */
            export type Unit = "business_day" | "day" | "hour" | "month" | "week";
            export const Unit = {
                BusinessDay: "business_day",
                Day: "day",
                Hour: "hour",
                Month: "month",
                Week: "week",
            } as const;
        }
    }

    /**
     * Describes a fixed amount to charge for shipping. Must be present if type is `fixed_amount`.
     */
    export interface FixedAmount {
        /** A non-negative integer in cents representing how much to charge. */
        amount: number;
        /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */
        currency: string;
        /** Shipping rates defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies). */
        currency_options?: Record<string, FixedAmount.CurrencyOptions.Value>;
    }

    export namespace FixedAmount {
        export namespace CurrencyOptions {
            export interface Value {
                /** A non-negative integer in cents representing how much to charge. */
                amount: number;
                /** Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. */
                tax_behavior?: Value.TaxBehavior;
            }

            export namespace Value {
                /**
                 * Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
                 */
                export type TaxBehavior = "exclusive" | "inclusive" | "unspecified";
                export const TaxBehavior = {
                    Exclusive: "exclusive",
                    Inclusive: "inclusive",
                    Unspecified: "unspecified",
                } as const;
            }
        }
    }

    /**
     * Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
     */
    export type TaxBehavior = "exclusive" | "inclusive" | "unspecified";
    export const TaxBehavior = {
        Exclusive: "exclusive",
        Inclusive: "inclusive",
        Unspecified: "unspecified",
    } as const;
}
