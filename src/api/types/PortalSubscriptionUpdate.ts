/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 *
 */
export interface PortalSubscriptionUpdate {
    /** The types of subscription updates that are supported for items listed in the `products` attribute. When empty, subscriptions are not updateable. */
    default_allowed_updates: PortalSubscriptionUpdate.DefaultAllowedUpdates.Item[];
    /** Whether the feature is enabled. */
    enabled: boolean;
    /** The list of up to 10 products that support subscription updates. */
    products?: Stripe.PortalSubscriptionUpdateProduct[];
    /** Determines how to handle prorations resulting from subscription updates. Valid values are `none`, `create_prorations`, and `always_invoice`. Defaults to a value of `none` if you don't set it during creation. */
    proration_behavior: PortalSubscriptionUpdate.ProrationBehavior;
    schedule_at_period_end: Stripe.PortalResourceScheduleUpdateAtPeriodEnd;
}

export namespace PortalSubscriptionUpdate {
    export type DefaultAllowedUpdates = DefaultAllowedUpdates.Item[];

    export namespace DefaultAllowedUpdates {
        export type Item = "price" | "promotion_code" | "quantity";
        export const Item = {
            Price: "price",
            PromotionCode: "promotion_code",
            Quantity: "quantity",
        } as const;
    }

    /**
     * Determines how to handle prorations resulting from subscription updates. Valid values are `none`, `create_prorations`, and `always_invoice`. Defaults to a value of `none` if you don't set it during creation.
     */
    export type ProrationBehavior = "always_invoice" | "create_prorations" | "none";
    export const ProrationBehavior = {
        AlwaysInvoice: "always_invoice",
        CreateProrations: "create_prorations",
        None: "none",
    } as const;
}
