/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 * Invoice Line Items represent the individual lines within an [invoice](https://stripe.com/docs/api/invoices) and only exist within the context of an invoice.
 *
 * Each line item is backed by either an [invoice item](https://stripe.com/docs/api/invoiceitems) or a [subscription item](https://stripe.com/docs/api/subscription_items).
 */
export interface LineItem {
    /** The amount, in cents (or local equivalent). */
    amount: number;
    /** The integer amount in cents (or local equivalent) representing the amount for this line item, excluding all tax and discounts. */
    amount_excluding_tax?: number;
    /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */
    currency: string;
    /** An arbitrary string attached to the object. Often useful for displaying to users. */
    description?: string;
    /** The amount of discount calculated per discount for this line item. */
    discount_amounts?: Stripe.DiscountsResourceDiscountAmount[];
    /** If true, discounts will apply to this line item. Always false for prorations. */
    discountable: boolean;
    /** The discounts applied to the invoice line item. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount. */
    discounts: LineItem.Discounts.Item[];
    /** Unique identifier for the object. */
    id: string;
    /** The ID of the invoice that contains this line item. */
    invoice?: string;
    /** The ID of the [invoice item](https://stripe.com/docs/api/invoiceitems) associated with this line item if any. */
    invoice_item?: LineItem.InvoiceItem;
    /** Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. */
    livemode: boolean;
    /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Note that for line items with `type=subscription`, `metadata` reflects the current metadata from the subscription associated with the line item, unless the invoice line was directly updated with different metadata after creation. */
    metadata: Record<string, string>;
    /** String representing the object's type. Objects of the same type share the same value. */
    object: "line_item";
    period: Stripe.InvoiceLineItemPeriod;
    /** The plan of the subscription, if the line item is a subscription or a proration. */
    plan?: Stripe.Plan;
    /** Contains pretax credit amounts (ex: discount, credit grants, etc) that apply to this line item. */
    pretax_credit_amounts?: Stripe.InvoicesResourcePretaxCreditAmount[];
    /** The price of the line item. */
    price?: Stripe.Price;
    /** Whether this is a proration. */
    proration: boolean;
    /** Additional details for proration line items */
    proration_details?: Stripe.InvoicesResourceLineItemsProrationDetails;
    /** The quantity of the subscription, if the line item is a subscription or a proration. */
    quantity?: number;
    /** The subscription that the invoice item pertains to, if any. */
    subscription?: LineItem.Subscription;
    /** The subscription item that generated this line item. Left empty if the line item is not an explicit result of a subscription. */
    subscription_item?: LineItem.SubscriptionItem;
    /** The amount of tax calculated per tax rate for this line item */
    tax_amounts: Stripe.InvoiceTaxAmount[];
    /** The tax rates which apply to the line item. */
    tax_rates: Stripe.TaxRate[];
    /** A string identifying the type of the source of this line item, either an `invoiceitem` or a `subscription`. */
    type: LineItem.Type;
    /** The amount in cents (or local equivalent) representing the unit amount for this line item, excluding all tax and discounts. */
    unit_amount_excluding_tax?: string;
}

export namespace LineItem {
    export type Discounts = Discounts.Item[];

    export namespace Discounts {
        export type Item = string | Stripe.Discount;
    }

    /**
     * The ID of the [invoice item](https://stripe.com/docs/api/invoiceitems) associated with this line item if any.
     */
    export type InvoiceItem = string | Stripe.Invoiceitem;
    /**
     * The subscription that the invoice item pertains to, if any.
     */
    export type Subscription = string | Stripe.Subscription;
    /**
     * The subscription item that generated this line item. Left empty if the line item is not an explicit result of a subscription.
     */
    export type SubscriptionItem = string | Stripe.SubscriptionItem;
    /**
     * A string identifying the type of the source of this line item, either an `invoiceitem` or a `subscription`.
     */
    export type Type = "invoiceitem" | "subscription";
    export const Type = {
        Invoiceitem: "invoiceitem",
        Subscription: "subscription",
    } as const;
}
