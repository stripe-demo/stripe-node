/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 * PaymentMethodConfigurations control which payment methods are displayed to your customers when you don't explicitly specify payment method types. You can have multiple configurations with different sets of payment methods for different scenarios.
 *
 * There are two types of PaymentMethodConfigurations. Which is used depends on the [charge type](https://stripe.com/docs/connect/charges):
 *
 * **Direct** configurations apply to payments created on your account, including Connect destination charges, Connect separate charges and transfers, and payments not involving Connect.
 *
 * **Child** configurations apply to payments created on your connected accounts using direct charges, and charges with the on_behalf_of parameter.
 *
 * Child configurations have a `parent` that sets default values and controls which settings connected accounts may override. You can specify a parent ID at payment time, and Stripe will automatically resolve the connected accountâ€™s associated child configuration. Parent configurations are [managed in the dashboard](https://dashboard.stripe.com/settings/payment_methods/connected_accounts) and are not available in this API.
 *
 * Related guides:
 * - [Payment Method Configurations API](https://stripe.com/docs/connect/payment-method-configurations)
 * - [Multiple configurations on dynamic payment methods](https://stripe.com/docs/payments/multiple-payment-method-configs)
 * - [Multiple configurations for your Connect accounts](https://stripe.com/docs/connect/multiple-payment-method-configurations)
 */
export interface PaymentMethodConfiguration {
    /** */
    acss_debit?: PaymentMethodConfiguration.AcssDebit;
    /** Whether the configuration can be used for new payments. */
    active: boolean;
    /** */
    affirm?: PaymentMethodConfiguration.Affirm;
    /** */
    afterpay_clearpay?: PaymentMethodConfiguration.AfterpayClearpay;
    /** */
    alipay?: PaymentMethodConfiguration.Alipay;
    /** */
    alma?: PaymentMethodConfiguration.Alma;
    /** */
    amazon_pay?: PaymentMethodConfiguration.AmazonPay;
    /** */
    apple_pay?: PaymentMethodConfiguration.ApplePay;
    /** For child configs, the Connect application associated with the configuration. */
    application?: string;
    /** */
    au_becs_debit?: PaymentMethodConfiguration.AuBecsDebit;
    /** */
    bacs_debit?: PaymentMethodConfiguration.BacsDebit;
    /** */
    bancontact?: PaymentMethodConfiguration.Bancontact;
    /** */
    blik?: PaymentMethodConfiguration.Blik;
    /** */
    boleto?: PaymentMethodConfiguration.Boleto;
    /** */
    card?: PaymentMethodConfiguration.Card;
    /** */
    cartes_bancaires?: PaymentMethodConfiguration.CartesBancaires;
    /** */
    cashapp?: PaymentMethodConfiguration.Cashapp;
    /** */
    customer_balance?: PaymentMethodConfiguration.CustomerBalance;
    /** */
    eps?: PaymentMethodConfiguration.Eps;
    /** */
    fpx?: PaymentMethodConfiguration.Fpx;
    /** */
    giropay?: PaymentMethodConfiguration.Giropay;
    /** */
    google_pay?: PaymentMethodConfiguration.GooglePay;
    /** */
    grabpay?: PaymentMethodConfiguration.Grabpay;
    /** Unique identifier for the object. */
    id: string;
    /** */
    ideal?: PaymentMethodConfiguration.Ideal;
    /** The default configuration is used whenever a payment method configuration is not specified. */
    is_default: boolean;
    /** */
    jcb?: PaymentMethodConfiguration.Jcb;
    /** */
    klarna?: PaymentMethodConfiguration.Klarna;
    /** */
    konbini?: PaymentMethodConfiguration.Konbini;
    /** */
    link?: PaymentMethodConfiguration.Link;
    /** Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. */
    livemode: boolean;
    /** */
    mobilepay?: PaymentMethodConfiguration.Mobilepay;
    /** */
    multibanco?: PaymentMethodConfiguration.Multibanco;
    /** The configuration's name. */
    name: string;
    /** String representing the object's type. Objects of the same type share the same value. */
    object: "payment_method_configuration";
    /** */
    oxxo?: PaymentMethodConfiguration.Oxxo;
    /** */
    p24?: PaymentMethodConfiguration.P24;
    /** For child configs, the configuration's parent configuration. */
    parent?: string;
    /** */
    pay_by_bank?: PaymentMethodConfiguration.PayByBank;
    /** */
    paynow?: PaymentMethodConfiguration.Paynow;
    /** */
    paypal?: PaymentMethodConfiguration.Paypal;
    /** */
    promptpay?: PaymentMethodConfiguration.Promptpay;
    /** */
    revolut_pay?: PaymentMethodConfiguration.RevolutPay;
    /** */
    sepa_debit?: PaymentMethodConfiguration.SepaDebit;
    /** */
    sofort?: PaymentMethodConfiguration.Sofort;
    /** */
    swish?: PaymentMethodConfiguration.Swish;
    /** */
    twint?: PaymentMethodConfiguration.Twint;
    /** */
    us_bank_account?: PaymentMethodConfiguration.UsBankAccount;
    /** */
    wechat_pay?: PaymentMethodConfiguration.WechatPay;
    /** */
    zip?: PaymentMethodConfiguration.Zip;
}

export namespace PaymentMethodConfiguration {
    /**
     *
     */
    export interface AcssDebit {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Affirm {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface AfterpayClearpay {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Alipay {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Alma {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface AmazonPay {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface ApplePay {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface AuBecsDebit {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface BacsDebit {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Bancontact {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Blik {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Boleto {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Card {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface CartesBancaires {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Cashapp {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface CustomerBalance {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Eps {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Fpx {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Giropay {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface GooglePay {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Grabpay {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Ideal {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Jcb {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Klarna {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Konbini {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Link {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Mobilepay {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Multibanco {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Oxxo {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface P24 {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface PayByBank {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Paynow {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Paypal {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Promptpay {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface RevolutPay {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface SepaDebit {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Sofort {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Swish {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Twint {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface UsBankAccount {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface WechatPay {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }

    /**
     *
     */
    export interface Zip {
        /** Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active. */
        available: boolean;
        display_preference: Stripe.PaymentMethodConfigResourceDisplayPreference;
    }
}
