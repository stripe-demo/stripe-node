/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 *
 */
export interface PaymentLinksResourcePaymentIntentData {
    /** Indicates when the funds will be captured from the customer's account. */
    capture_method?: PaymentLinksResourcePaymentIntentData.CaptureMethod;
    /** An arbitrary string attached to the object. Often useful for displaying to users. */
    description?: string;
    /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that will set metadata on [Payment Intents](https://stripe.com/docs/api/payment_intents) generated from this payment link. */
    metadata: Record<string, string>;
    /** Indicates that you intend to make future payments with the payment method collected during checkout. */
    setup_future_usage?: PaymentLinksResourcePaymentIntentData.SetupFutureUsage;
    /** For a non-card payment, information about the charge that appears on the customer's statement when this payment succeeds in creating a charge. */
    statement_descriptor?: string;
    /** For a card payment, information about the charge that appears on the customer's statement when this payment succeeds in creating a charge. Concatenated with the account's statement descriptor prefix to form the complete statement descriptor. */
    statement_descriptor_suffix?: string;
    /** A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/connect/separate-charges-and-transfers) for details. */
    transfer_group?: string;
}

export namespace PaymentLinksResourcePaymentIntentData {
    /**
     * Indicates when the funds will be captured from the customer's account.
     */
    export type CaptureMethod = "automatic" | "automatic_async" | "manual";
    export const CaptureMethod = {
        Automatic: "automatic",
        AutomaticAsync: "automatic_async",
        Manual: "manual",
    } as const;
    /**
     * Indicates that you intend to make future payments with the payment method collected during checkout.
     */
    export type SetupFutureUsage = "off_session" | "on_session";
    export const SetupFutureUsage = {
        OffSession: "off_session",
        OnSession: "on_session",
    } as const;
}
