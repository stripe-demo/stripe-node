/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 * Represents a reader action to refund a payment
 */
export interface TerminalReaderReaderResourceRefundPaymentAction {
    /** The amount being refunded. */
    amount?: number;
    /** Charge that is being refunded. */
    charge?: TerminalReaderReaderResourceRefundPaymentAction.Charge;
    /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. */
    metadata?: Record<string, string>;
    /** Payment intent that is being refunded. */
    payment_intent?: TerminalReaderReaderResourceRefundPaymentAction.PaymentIntent;
    /** The reason for the refund. */
    reason?: TerminalReaderReaderResourceRefundPaymentAction.Reason;
    /** Unique identifier for the refund object. */
    refund?: TerminalReaderReaderResourceRefundPaymentAction.Refund;
    /** Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge. */
    refund_application_fee?: boolean;
    refund_payment_config?: Stripe.TerminalReaderReaderResourceRefundPaymentConfig;
    /** Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount). A transfer can be reversed only by the application that created the charge. */
    reverse_transfer?: boolean;
}

export namespace TerminalReaderReaderResourceRefundPaymentAction {
    /**
     * Charge that is being refunded.
     */
    export type Charge = string | Stripe.Charge;
    /**
     * Payment intent that is being refunded.
     */
    export type PaymentIntent = string | Stripe.PaymentIntent;
    /**
     * The reason for the refund.
     */
    export type Reason = "duplicate" | "fraudulent" | "requested_by_customer";
    export const Reason = {
        Duplicate: "duplicate",
        Fraudulent: "fraudulent",
        RequestedByCustomer: "requested_by_customer",
    } as const;
    /**
     * Unique identifier for the refund object.
     */
    export type Refund = string | Stripe.Refund;
}
