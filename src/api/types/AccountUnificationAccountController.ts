/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 *
 */
export interface AccountUnificationAccountController {
    fees?: Stripe.AccountUnificationAccountControllerFees;
    /** `true` if the Connect application retrieving the resource controls the account and can therefore exercise [platform controls](https://stripe.com/docs/connect/platform-controls-for-standard-accounts). Otherwise, this field is null. */
    is_controller?: boolean;
    losses?: Stripe.AccountUnificationAccountControllerLosses;
    /** A value indicating responsibility for collecting requirements on this account. Only returned when the Connect application retrieving the resource controls the account. */
    requirement_collection?: AccountUnificationAccountController.RequirementCollection;
    stripe_dashboard?: Stripe.AccountUnificationAccountControllerStripeDashboard;
    /** The controller type. Can be `application`, if a Connect application controls the account, or `account`, if the account controls itself. */
    type: AccountUnificationAccountController.Type;
}

export namespace AccountUnificationAccountController {
    /**
     * A value indicating responsibility for collecting requirements on this account. Only returned when the Connect application retrieving the resource controls the account.
     */
    export type RequirementCollection = "application" | "stripe";
    export const RequirementCollection = {
        Application: "application",
        Stripe: "stripe",
    } as const;
    /**
     * The controller type. Can be `application`, if a Connect application controls the account, or `account`, if the account controls itself.
     */
    export type Type = "account" | "application";
    export const Type = {
        Account: "account",
        Application: "application",
    } as const;
}
