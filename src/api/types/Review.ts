/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 * Reviews can be used to supplement automated fraud detection with human expertise.
 *
 * Learn more about [Radar](/radar) and reviewing payments
 * [here](https://stripe.com/docs/radar/reviews).
 */
export interface Review {
    /** The ZIP or postal code of the card used, if applicable. */
    billing_zip?: string;
    /** The charge associated with this review. */
    charge?: Review.Charge;
    /** The reason the review was closed, or null if it has not yet been closed. One of `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`. */
    closed_reason?: Review.ClosedReason;
    /** Time at which the object was created. Measured in seconds since the Unix epoch. */
    created: number;
    /** Unique identifier for the object. */
    id: string;
    /** The IP address where the payment originated. */
    ip_address?: string;
    /** Information related to the location of the payment. Note that this information is an approximation and attempts to locate the nearest population center - it should not be used to determine a specific address. */
    ip_address_location?: Stripe.RadarReviewResourceLocation;
    /** Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. */
    livemode: boolean;
    /** String representing the object's type. Objects of the same type share the same value. */
    object: "review";
    /** If `true`, the review needs action. */
    open: boolean;
    /** The reason the review was opened. One of `rule` or `manual`. */
    opened_reason: Review.OpenedReason;
    /** The PaymentIntent ID associated with this review, if one exists. */
    payment_intent?: Review.PaymentIntent;
    /** The reason the review is currently open or closed. One of `rule`, `manual`, `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`. */
    reason: string;
    /** Information related to the browsing session of the user who initiated the payment. */
    session?: Stripe.RadarReviewResourceSession;
}

export namespace Review {
    /**
     * The charge associated with this review.
     */
    export type Charge = string | Stripe.Charge;
    /**
     * The reason the review was closed, or null if it has not yet been closed. One of `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.
     */
    export type ClosedReason = "approved" | "disputed" | "redacted" | "refunded" | "refunded_as_fraud";
    export const ClosedReason = {
        Approved: "approved",
        Disputed: "disputed",
        Redacted: "redacted",
        Refunded: "refunded",
        RefundedAsFraud: "refunded_as_fraud",
    } as const;
    /**
     * The reason the review was opened. One of `rule` or `manual`.
     */
    export type OpenedReason = "manual" | "rule";
    export const OpenedReason = {
        Manual: "manual",
        Rule: "rule",
    } as const;
    /**
     * The PaymentIntent ID associated with this review, if one exists.
     */
    export type PaymentIntent = string | Stripe.PaymentIntent;
}
