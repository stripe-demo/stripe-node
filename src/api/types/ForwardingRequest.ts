/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 * Instructs Stripe to make a request on your behalf using the destination URL. The destination URL
 * is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials
 * provided during onboarding, and injects card details from the payment_method into the request.
 *
 * Stripe redacts all sensitive fields and headers, including authentication credentials and card numbers,
 * before storing the request and response data in the forwarding Request object, which are subject to a
 * 30-day retention period.
 *
 * You can provide a Stripe idempotency key to make sure that requests with the same key result in only one
 * outbound request. The Stripe idempotency key provided should be unique and different from any idempotency
 * keys provided on the underlying third-party request.
 *
 * Forwarding Requests are synchronous requests that return a response or time out according to
 * Stripeâ€™s limits.
 *
 * Related guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).
 */
export interface ForwardingRequest {
    /** Time at which the object was created. Measured in seconds since the Unix epoch. */
    created: number;
    /** Unique identifier for the object. */
    id: string;
    /** Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. */
    livemode: boolean;
    /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. */
    metadata?: Record<string, string | undefined>;
    /** String representing the object's type. Objects of the same type share the same value. */
    object: "forwarding.request";
    /** The PaymentMethod to insert into the forwarded request. Forwarding previously consumed PaymentMethods is allowed. */
    payment_method: string;
    /** The field kinds to be replaced in the forwarded request. */
    replacements: ForwardingRequest.Replacements.Item[];
    /** Context about the request from Stripe's servers to the destination endpoint. */
    request_context?: Stripe.ForwardedRequestContext;
    /** The request that was sent to the destination endpoint. We redact any sensitive fields. */
    request_details?: Stripe.ForwardedRequestDetails;
    /** The response that the destination endpoint returned to us. We redact any sensitive fields. */
    response_details?: Stripe.ForwardedResponseDetails;
    /** The destination URL for the forwarded request. Must be supported by the config. */
    url?: string;
}

export namespace ForwardingRequest {
    export type Replacements = Replacements.Item[];

    export namespace Replacements {
        export type Item = "card_cvc" | "card_expiry" | "card_number" | "cardholder_name" | "request_signature";
        export const Item = {
            CardCvc: "card_cvc",
            CardExpiry: "card_expiry",
            CardNumber: "card_number",
            CardholderName: "cardholder_name",
            RequestSignature: "request_signature",
        } as const;
    }
}
