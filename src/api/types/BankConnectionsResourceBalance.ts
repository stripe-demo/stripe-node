/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 *
 */
export interface BankConnectionsResourceBalance {
    /** The time that the external institution calculated this balance. Measured in seconds since the Unix epoch. */
    as_of: number;
    cash?: Stripe.BankConnectionsResourceBalanceApiResourceCashBalance;
    credit?: Stripe.BankConnectionsResourceBalanceApiResourceCreditBalance;
    /**
     * The balances owed to (or by) the account holder, before subtracting any outbound pending transactions or adding any inbound pending transactions.
     *
     * Each key is a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
     *
     * Each value is a integer amount. A positive amount indicates money owed to the account holder. A negative amount indicates money owed by the account holder.
     */
    current: Record<string, number>;
    /** The `type` of the balance. An additional hash is included on the balance with a name matching this value. */
    type: BankConnectionsResourceBalance.Type;
}

export namespace BankConnectionsResourceBalance {
    /**
     * The `type` of the balance. An additional hash is included on the balance with a name matching this value.
     */
    export type Type = "cash" | "credit";
    export const Type = {
        Cash: "cash",
        Credit: "credit",
    } as const;
}
