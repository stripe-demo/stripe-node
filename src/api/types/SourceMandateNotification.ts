/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 * Source mandate notifications should be created when a notification related to
 * a source mandate must be sent to the payer. They will trigger a webhook or
 * deliver an email to the customer.
 */
export interface SourceMandateNotification {
    acss_debit?: Stripe.SourceMandateNotificationAcssDebitData;
    /** A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for Â¥1, Japanese Yen being a zero-decimal currency) representing the amount associated with the mandate notification. The amount is expressed in the currency of the underlying source. Required if the notification type is `debit_initiated`. */
    amount?: number;
    bacs_debit?: Stripe.SourceMandateNotificationBacsDebitData;
    /** Time at which the object was created. Measured in seconds since the Unix epoch. */
    created: number;
    /** Unique identifier for the object. */
    id: string;
    /** Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. */
    livemode: boolean;
    /** String representing the object's type. Objects of the same type share the same value. */
    object: "source_mandate_notification";
    /** The reason of the mandate notification. Valid reasons are `mandate_confirmed` or `debit_initiated`. */
    reason: string;
    sepa_debit?: Stripe.SourceMandateNotificationSepaDebitData;
    source: Stripe.Source;
    /** The status of the mandate notification. Valid statuses are `pending` or `submitted`. */
    status: string;
    /** The type of source this mandate notification is attached to. Should be the source type identifier code for the payment method, such as `three_d_secure`. */
    type: string;
}
