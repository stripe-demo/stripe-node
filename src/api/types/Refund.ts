/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 * Refund objects allow you to refund a previously created charge that isn't
 * refunded yet. Funds are refunded to the credit or debit card that's
 * initially charged.
 *
 * Related guide: [Refunds](https://stripe.com/docs/refunds)
 */
export interface Refund {
    /** Amount, in cents (or local equivalent). */
    amount: number;
    /** Balance transaction that describes the impact on your account balance. */
    balance_transaction?: Refund.BalanceTransaction;
    /** ID of the charge that's refunded. */
    charge?: Refund.Charge;
    /** Time at which the object was created. Measured in seconds since the Unix epoch. */
    created: number;
    /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */
    currency: string;
    /** An arbitrary string attached to the object. You can use this for displaying to users (available on non-card refunds only). */
    description?: string;
    destination_details?: Stripe.RefundDestinationDetails;
    /** After the refund fails, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction. */
    failure_balance_transaction?: Refund.FailureBalanceTransaction;
    /** Provides the reason for the refund failure. Possible values are: `lost_or_stolen_card`, `expired_or_canceled_card`, `charge_for_pending_refund_disputed`, `insufficient_funds`, `declined`, `merchant_request`, or `unknown`. */
    failure_reason?: string;
    /** Unique identifier for the object. */
    id: string;
    /** For payment methods without native refund support (for example, Konbini, PromptPay), provide an email address for the customer to receive refund instructions. */
    instructions_email?: string;
    /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. */
    metadata?: Record<string, string | undefined>;
    next_action?: Stripe.RefundNextAction;
    /** String representing the object's type. Objects of the same type share the same value. */
    object: "refund";
    /** ID of the PaymentIntent that's refunded. */
    payment_intent?: Refund.PaymentIntent;
    /** Reason for the refund, which is either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated by Stripe internally (`expired_uncaptured_charge`). */
    reason?: Refund.Reason;
    /** This is the transaction number that appears on email receipts sent for this refund. */
    receipt_number?: string;
    /** The transfer reversal that's associated with the refund. Only present if the charge came from another Stripe account. */
    source_transfer_reversal?: Refund.SourceTransferReversal;
    /** Status of the refund. This can be `pending`, `requires_action`, `succeeded`, `failed`, or `canceled`. Learn more about [failed refunds](https://stripe.com/docs/refunds#failed-refunds). */
    status?: string;
    /** This refers to the transfer reversal object if the accompanying transfer reverses. This is only applicable if the charge was created using the destination parameter. */
    transfer_reversal?: Refund.TransferReversal;
}

export namespace Refund {
    /**
     * Balance transaction that describes the impact on your account balance.
     */
    export type BalanceTransaction = string | Stripe.BalanceTransaction;
    /**
     * ID of the charge that's refunded.
     */
    export type Charge = string | Stripe.Charge;
    /**
     * After the refund fails, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.
     */
    export type FailureBalanceTransaction = string | Stripe.BalanceTransaction;
    /**
     * ID of the PaymentIntent that's refunded.
     */
    export type PaymentIntent = string | Stripe.PaymentIntent;
    /**
     * Reason for the refund, which is either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated by Stripe internally (`expired_uncaptured_charge`).
     */
    export type Reason = "duplicate" | "expired_uncaptured_charge" | "fraudulent" | "requested_by_customer";
    export const Reason = {
        Duplicate: "duplicate",
        ExpiredUncapturedCharge: "expired_uncaptured_charge",
        Fraudulent: "fraudulent",
        RequestedByCustomer: "requested_by_customer",
    } as const;
    /**
     * The transfer reversal that's associated with the refund. Only present if the charge came from another Stripe account.
     */
    export type SourceTransferReversal = string | Stripe.TransferReversal;
    /**
     * This refers to the transfer reversal object if the accompanying transfer reverses. This is only applicable if the charge was created using the destination parameter.
     */
    export type TransferReversal = string | Stripe.TransferReversal;
}
