/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 *
 */
export interface TaxIDsOwner {
    /** The account being referenced when `type` is `account`. */
    account?: TaxIDsOwner.Account;
    /** The Connect Application being referenced when `type` is `application`. */
    application?: TaxIDsOwner.Application;
    /** The customer being referenced when `type` is `customer`. */
    customer?: TaxIDsOwner.Customer;
    /** Type of owner referenced. */
    type: TaxIDsOwner.Type;
}

export namespace TaxIDsOwner {
    /**
     * The account being referenced when `type` is `account`.
     */
    export type Account = string | Stripe.Account;
    /**
     * The Connect Application being referenced when `type` is `application`.
     */
    export type Application = string | Stripe.Application;
    /**
     * The customer being referenced when `type` is `customer`.
     */
    export type Customer = string | Stripe.Customer;
    /**
     * Type of owner referenced.
     */
    export type Type = "account" | "application" | "customer" | "self";
    export const Type = {
        Account: "account",
        Application: "application",
        Customer: "customer",
        Self: "self",
    } as const;
}
