/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 * Any use of an [issued card](https://stripe.com/docs/issuing) that results in funds entering or leaving
 * your Stripe account, such as a completed purchase or refund, is represented by an Issuing
 * `Transaction` object.
 *
 * Related guide: [Issued card transactions](https://stripe.com/docs/issuing/purchases/transactions)
 */
export interface IssuingTransaction {
    /** The transaction amount, which will be reflected in your balance. This amount is in your currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). */
    amount: number;
    /** Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). */
    amount_details?: Stripe.IssuingTransactionAmountDetails;
    /** The `Authorization` object that led to this transaction. */
    authorization?: IssuingTransaction.Authorization;
    /** ID of the [balance transaction](https://stripe.com/docs/api/balance_transactions) associated with this transaction. */
    balance_transaction?: IssuingTransaction.BalanceTransaction;
    /** The card used to make this transaction. */
    card: IssuingTransaction.Card;
    /** The cardholder to whom this transaction belongs. */
    cardholder?: IssuingTransaction.Cardholder;
    /** Time at which the object was created. Measured in seconds since the Unix epoch. */
    created: number;
    /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */
    currency: string;
    /** If you've disputed the transaction, the ID of the dispute. */
    dispute?: IssuingTransaction.Dispute;
    /** Unique identifier for the object. */
    id: string;
    /** Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. */
    livemode: boolean;
    /** The amount that the merchant will receive, denominated in `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). It will be different from `amount` if the merchant is taking payment in a different currency. */
    merchant_amount: number;
    /** The currency with which the merchant is taking payment. */
    merchant_currency: string;
    merchant_data: Stripe.IssuingAuthorizationMerchantData;
    /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. */
    metadata: Record<string, string>;
    /** Details about the transaction, such as processing dates, set by the card network. */
    network_data?: Stripe.IssuingTransactionNetworkData;
    /** String representing the object's type. Objects of the same type share the same value. */
    object: "issuing.transaction";
    /** Additional purchase information that is optionally provided by the merchant. */
    purchase_details?: Stripe.IssuingTransactionPurchaseDetails;
    /** [Token](https://stripe.com/docs/api/issuing/tokens/object) object used for this transaction. If a network token was not used for this transaction, this field will be null. */
    token?: IssuingTransaction.Token;
    /** [Treasury](https://stripe.com/docs/api/treasury) details related to this transaction if it was created on a [FinancialAccount](/docs/api/treasury/financial_accounts */
    treasury?: Stripe.IssuingTransactionTreasury;
    /** The nature of the transaction. */
    type: IssuingTransaction.Type;
    /** The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`. */
    wallet?: IssuingTransaction.Wallet;
}

export namespace IssuingTransaction {
    /**
     * The `Authorization` object that led to this transaction.
     */
    export type Authorization = string | Stripe.IssuingAuthorization;
    /**
     * ID of the [balance transaction](https://stripe.com/docs/api/balance_transactions) associated with this transaction.
     */
    export type BalanceTransaction = string | Stripe.BalanceTransaction;
    /**
     * The card used to make this transaction.
     */
    export type Card = string | Stripe.IssuingCard;
    /**
     * The cardholder to whom this transaction belongs.
     */
    export type Cardholder = string | Stripe.IssuingCardholder;
    /**
     * If you've disputed the transaction, the ID of the dispute.
     */
    export type Dispute = string | Stripe.IssuingDispute;
    /**
     * [Token](https://stripe.com/docs/api/issuing/tokens/object) object used for this transaction. If a network token was not used for this transaction, this field will be null.
     */
    export type Token = string | Stripe.IssuingToken;
    /**
     * The nature of the transaction.
     */
    export type Type = "capture" | "refund";
    export const Type = {
        Capture: "capture",
        Refund: "refund",
    } as const;
    /**
     * The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`.
     */
    export type Wallet = "apple_pay" | "google_pay" | "samsung_pay";
    export const Wallet = {
        ApplePay: "apple_pay",
        GooglePay: "google_pay",
        SamsungPay: "samsung_pay",
    } as const;
}
