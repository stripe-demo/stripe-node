/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 * You can add one or multiple tax IDs to a [customer](https://stripe.com/docs/api/customers) or account.
 * Customer and account tax IDs get displayed on related invoices and credit notes.
 *
 * Related guides: [Customer tax identification numbers](https://stripe.com/docs/billing/taxes/tax-ids), [Account tax IDs](https://stripe.com/docs/invoicing/connect#account-tax-ids)
 */
export interface TaxId {
    /** Two-letter ISO code representing the country of the tax ID. */
    country?: string;
    /** Time at which the object was created. Measured in seconds since the Unix epoch. */
    created: number;
    /** ID of the customer. */
    customer?: TaxId.Customer;
    /** Unique identifier for the object. */
    id: string;
    /** Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. */
    livemode: boolean;
    /** String representing the object's type. Objects of the same type share the same value. */
    object: "tax_id";
    /** The account or customer the tax ID belongs to. */
    owner?: Stripe.TaxIDsOwner;
    /** Type of the tax ID, one of `ad_nrt`, `ae_trn`, `al_tin`, `am_tin`, `ao_tin`, `ar_cuit`, `au_abn`, `au_arn`, `ba_tin`, `bb_tin`, `bg_uic`, `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `bs_tin`, `by_tin`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `cd_nif`, `ch_uid`, `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `de_stn`, `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `gn_nif`, `hk_br`, `hr_oib`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kh_tin`, `kr_brn`, `kz_bin`, `li_uid`, `li_vat`, `ma_vat`, `md_vat`, `me_pib`, `mk_vat`, `mr_nif`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `ng_tin`, `no_vat`, `no_voec`, `np_pan`, `nz_gst`, `om_vat`, `pe_ruc`, `ph_tin`, `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `sn_ninea`, `sr_fin`, `sv_nit`, `th_vat`, `tj_tin`, `tr_tin`, `tw_vat`, `tz_vat`, `ua_vat`, `ug_tin`, `us_ein`, `uy_ruc`, `uz_tin`, `uz_vat`, `ve_rif`, `vn_tin`, `za_vat`, `zm_tin`, or `zw_tin`. Note that some legacy tax IDs have type `unknown` */
    type: TaxId.Type;
    /** Value of the tax ID. */
    value: string;
    /** Tax ID verification information. */
    verification?: Stripe.TaxIdVerification;
}

export namespace TaxId {
    /**
     * ID of the customer.
     */
    export type Customer = string | Stripe.Customer;
    /**
     * Type of the tax ID, one of `ad_nrt`, `ae_trn`, `al_tin`, `am_tin`, `ao_tin`, `ar_cuit`, `au_abn`, `au_arn`, `ba_tin`, `bb_tin`, `bg_uic`, `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `bs_tin`, `by_tin`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `cd_nif`, `ch_uid`, `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `de_stn`, `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `gn_nif`, `hk_br`, `hr_oib`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kh_tin`, `kr_brn`, `kz_bin`, `li_uid`, `li_vat`, `ma_vat`, `md_vat`, `me_pib`, `mk_vat`, `mr_nif`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `ng_tin`, `no_vat`, `no_voec`, `np_pan`, `nz_gst`, `om_vat`, `pe_ruc`, `ph_tin`, `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `sn_ninea`, `sr_fin`, `sv_nit`, `th_vat`, `tj_tin`, `tr_tin`, `tw_vat`, `tz_vat`, `ua_vat`, `ug_tin`, `us_ein`, `uy_ruc`, `uz_tin`, `uz_vat`, `ve_rif`, `vn_tin`, `za_vat`, `zm_tin`, or `zw_tin`. Note that some legacy tax IDs have type `unknown`
     */
    export type Type =
        | "ad_nrt"
        | "ae_trn"
        | "al_tin"
        | "am_tin"
        | "ao_tin"
        | "ar_cuit"
        | "au_abn"
        | "au_arn"
        | "ba_tin"
        | "bb_tin"
        | "bg_uic"
        | "bh_vat"
        | "bo_tin"
        | "br_cnpj"
        | "br_cpf"
        | "bs_tin"
        | "by_tin"
        | "ca_bn"
        | "ca_gst_hst"
        | "ca_pst_bc"
        | "ca_pst_mb"
        | "ca_pst_sk"
        | "ca_qst"
        | "cd_nif"
        | "ch_uid"
        | "ch_vat"
        | "cl_tin"
        | "cn_tin"
        | "co_nit"
        | "cr_tin"
        | "de_stn"
        | "do_rcn"
        | "ec_ruc"
        | "eg_tin"
        | "es_cif"
        | "eu_oss_vat"
        | "eu_vat"
        | "gb_vat"
        | "ge_vat"
        | "gn_nif"
        | "hk_br"
        | "hr_oib"
        | "hu_tin"
        | "id_npwp"
        | "il_vat"
        | "in_gst"
        | "is_vat"
        | "jp_cn"
        | "jp_rn"
        | "jp_trn"
        | "ke_pin"
        | "kh_tin"
        | "kr_brn"
        | "kz_bin"
        | "li_uid"
        | "li_vat"
        | "ma_vat"
        | "md_vat"
        | "me_pib"
        | "mk_vat"
        | "mr_nif"
        | "mx_rfc"
        | "my_frp"
        | "my_itn"
        | "my_sst"
        | "ng_tin"
        | "no_vat"
        | "no_voec"
        | "np_pan"
        | "nz_gst"
        | "om_vat"
        | "pe_ruc"
        | "ph_tin"
        | "ro_tin"
        | "rs_pib"
        | "ru_inn"
        | "ru_kpp"
        | "sa_vat"
        | "sg_gst"
        | "sg_uen"
        | "si_tin"
        | "sn_ninea"
        | "sr_fin"
        | "sv_nit"
        | "th_vat"
        | "tj_tin"
        | "tr_tin"
        | "tw_vat"
        | "tz_vat"
        | "ua_vat"
        | "ug_tin"
        | "unknown"
        | "us_ein"
        | "uy_ruc"
        | "uz_tin"
        | "uz_vat"
        | "ve_rif"
        | "vn_tin"
        | "za_vat"
        | "zm_tin"
        | "zw_tin";
    export const Type = {
        AdNrt: "ad_nrt",
        AeTrn: "ae_trn",
        AlTin: "al_tin",
        AmTin: "am_tin",
        AoTin: "ao_tin",
        ArCuit: "ar_cuit",
        AuAbn: "au_abn",
        AuArn: "au_arn",
        BaTin: "ba_tin",
        BbTin: "bb_tin",
        BgUic: "bg_uic",
        BhVat: "bh_vat",
        BoTin: "bo_tin",
        BrCnpj: "br_cnpj",
        BrCpf: "br_cpf",
        BsTin: "bs_tin",
        ByTin: "by_tin",
        CaBn: "ca_bn",
        CaGstHst: "ca_gst_hst",
        CaPstBc: "ca_pst_bc",
        CaPstMb: "ca_pst_mb",
        CaPstSk: "ca_pst_sk",
        CaQst: "ca_qst",
        CdNif: "cd_nif",
        ChUid: "ch_uid",
        ChVat: "ch_vat",
        ClTin: "cl_tin",
        CnTin: "cn_tin",
        CoNit: "co_nit",
        CrTin: "cr_tin",
        DeStn: "de_stn",
        DoRcn: "do_rcn",
        EcRuc: "ec_ruc",
        EgTin: "eg_tin",
        EsCif: "es_cif",
        EuOssVat: "eu_oss_vat",
        EuVat: "eu_vat",
        GbVat: "gb_vat",
        GeVat: "ge_vat",
        GnNif: "gn_nif",
        HkBr: "hk_br",
        HrOib: "hr_oib",
        HuTin: "hu_tin",
        IdNpwp: "id_npwp",
        IlVat: "il_vat",
        InGst: "in_gst",
        IsVat: "is_vat",
        JpCn: "jp_cn",
        JpRn: "jp_rn",
        JpTrn: "jp_trn",
        KePin: "ke_pin",
        KhTin: "kh_tin",
        KrBrn: "kr_brn",
        KzBin: "kz_bin",
        LiUid: "li_uid",
        LiVat: "li_vat",
        MaVat: "ma_vat",
        MdVat: "md_vat",
        MePib: "me_pib",
        MkVat: "mk_vat",
        MrNif: "mr_nif",
        MxRfc: "mx_rfc",
        MyFrp: "my_frp",
        MyItn: "my_itn",
        MySst: "my_sst",
        NgTin: "ng_tin",
        NoVat: "no_vat",
        NoVoec: "no_voec",
        NpPan: "np_pan",
        NzGst: "nz_gst",
        OmVat: "om_vat",
        PeRuc: "pe_ruc",
        PhTin: "ph_tin",
        RoTin: "ro_tin",
        RsPib: "rs_pib",
        RuInn: "ru_inn",
        RuKpp: "ru_kpp",
        SaVat: "sa_vat",
        SgGst: "sg_gst",
        SgUen: "sg_uen",
        SiTin: "si_tin",
        SnNinea: "sn_ninea",
        SrFin: "sr_fin",
        SvNit: "sv_nit",
        ThVat: "th_vat",
        TjTin: "tj_tin",
        TrTin: "tr_tin",
        TwVat: "tw_vat",
        TzVat: "tz_vat",
        UaVat: "ua_vat",
        UgTin: "ug_tin",
        Unknown: "unknown",
        UsEin: "us_ein",
        UyRuc: "uy_ruc",
        UzTin: "uz_tin",
        UzVat: "uz_vat",
        VeRif: "ve_rif",
        VnTin: "vn_tin",
        ZaVat: "za_vat",
        ZmTin: "zm_tin",
        ZwTin: "zw_tin",
    } as const;
}
