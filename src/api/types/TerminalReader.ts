/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 * A Reader represents a physical device for accepting payment details.
 *
 * Related guide: [Connecting to a reader](https://stripe.com/docs/terminal/payments/connect-reader)
 */
export interface TerminalReader {
    /** The most recent action performed by the reader. */
    action?: Stripe.TerminalReaderReaderResourceReaderAction;
    /** The current software version of the reader. */
    device_sw_version?: string;
    /** Type of reader, one of `bbpos_wisepad3`, `stripe_m2`, `stripe_s700`, `bbpos_chipper2x`, `bbpos_wisepos_e`, `verifone_P400`, `simulated_wisepos_e`, or `mobile_phone_reader`. */
    device_type: TerminalReader.DeviceType;
    /** Unique identifier for the object. */
    id: string;
    /** The local IP address of the reader. */
    ip_address?: string;
    /** Custom label given to the reader for easier identification. */
    label: string;
    /** Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. */
    livemode: boolean;
    /** The location identifier of the reader. */
    location?: TerminalReader.Location;
    /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. */
    metadata: Record<string, string>;
    /** String representing the object's type. Objects of the same type share the same value. */
    object: "terminal.reader";
    /** Serial number of the reader. */
    serial_number: string;
    /** The networking status of the reader. We do not recommend using this field in flows that may block taking payments. */
    status?: TerminalReader.Status;
}

export namespace TerminalReader {
    /**
     * Type of reader, one of `bbpos_wisepad3`, `stripe_m2`, `stripe_s700`, `bbpos_chipper2x`, `bbpos_wisepos_e`, `verifone_P400`, `simulated_wisepos_e`, or `mobile_phone_reader`.
     */
    export type DeviceType =
        | "bbpos_chipper2x"
        | "bbpos_wisepad3"
        | "bbpos_wisepos_e"
        | "mobile_phone_reader"
        | "simulated_wisepos_e"
        | "stripe_m2"
        | "stripe_s700"
        | "verifone_P400";
    export const DeviceType = {
        BbposChipper2X: "bbpos_chipper2x",
        BbposWisepad3: "bbpos_wisepad3",
        BbposWiseposE: "bbpos_wisepos_e",
        MobilePhoneReader: "mobile_phone_reader",
        SimulatedWiseposE: "simulated_wisepos_e",
        StripeM2: "stripe_m2",
        StripeS700: "stripe_s700",
        VerifoneP400: "verifone_P400",
    } as const;
    /**
     * The location identifier of the reader.
     */
    export type Location = string | Stripe.TerminalLocation;
    /**
     * The networking status of the reader. We do not recommend using this field in flows that may block taking payments.
     */
    export type Status = "offline" | "online";
    export const Status = {
        Offline: "offline",
        Online: "online",
    } as const;
}
