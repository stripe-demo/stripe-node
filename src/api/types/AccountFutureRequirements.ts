/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Stripe from "../index";

/**
 *
 */
export interface AccountFutureRequirements {
    /** Fields that are due and can be satisfied by providing the corresponding alternative fields instead. */
    alternatives?: Stripe.AccountRequirementsAlternative[];
    /** Date on which `future_requirements` becomes the main `requirements` hash and `future_requirements` becomes empty. After the transition, `currently_due` requirements may immediately become `past_due`, but the account may also be given a grace period depending on its enablement state prior to transitioning. */
    current_deadline?: number;
    /** Fields that need to be collected to keep the account enabled. If not collected by `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash. */
    currently_due?: string[];
    /** This is typed as an enum for consistency with `requirements.disabled_reason`. */
    disabled_reason?: AccountFutureRequirements.DisabledReason;
    /** Fields that are `currently_due` and need to be collected again because validation or verification failed. */
    errors?: Stripe.AccountRequirementsError[];
    /** Fields you must collect when all thresholds are reached. As they become required, they appear in `currently_due` as well. */
    eventually_due?: string[];
    /** Fields that weren't collected by `requirements.current_deadline`. These fields need to be collected to enable the capability on the account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`. */
    past_due?: string[];
    /** Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`. Fields might appear in `eventually_due` or `currently_due` and in `pending_verification` if verification fails but another verification is still pending. */
    pending_verification?: string[];
}

export namespace AccountFutureRequirements {
    /**
     * This is typed as an enum for consistency with `requirements.disabled_reason`.
     */
    export type DisabledReason =
        | "action_required.requested_capabilities"
        | "listed"
        | "other"
        | "platform_paused"
        | "rejected.fraud"
        | "rejected.incomplete_verification"
        | "rejected.listed"
        | "rejected.other"
        | "rejected.platform_fraud"
        | "rejected.platform_other"
        | "rejected.platform_terms_of_service"
        | "rejected.terms_of_service"
        | "requirements.past_due"
        | "requirements.pending_verification"
        | "under_review";
    export const DisabledReason = {
        ActionRequiredRequestedCapabilities: "action_required.requested_capabilities",
        Listed: "listed",
        Other: "other",
        PlatformPaused: "platform_paused",
        RejectedFraud: "rejected.fraud",
        RejectedIncompleteVerification: "rejected.incomplete_verification",
        RejectedListed: "rejected.listed",
        RejectedOther: "rejected.other",
        RejectedPlatformFraud: "rejected.platform_fraud",
        RejectedPlatformOther: "rejected.platform_other",
        RejectedPlatformTermsOfService: "rejected.platform_terms_of_service",
        RejectedTermsOfService: "rejected.terms_of_service",
        RequirementsPastDue: "requirements.past_due",
        RequirementsPendingVerification: "requirements.pending_verification",
        UnderReview: "under_review",
    } as const;
}
